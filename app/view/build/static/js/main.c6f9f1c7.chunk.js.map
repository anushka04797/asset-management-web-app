{"version":3,"sources":["assets/img/anime3.png","variables/charts.js","assets/img/emilyz.jpg","assets/img/fish-float.svg","config.js","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","components/Sidebar/Sidebar.js","contexts/BackgroundColorContext.js","contexts/ThemeContext.js","assets/icons/up-arrow.svg","components/FixedPlugin/FixedPlugin.js","assets/icons/Paper.svg","assets/icons/safe-pond.svg","assets/icons/refresh.svg","store/slices/authSlice.js","store/slices/pondsSlice.js","store/slices/userSlice.js","store/store.js","components/OwnerUpdateModal/OwnerUpdateModal.js","views/Dashboard.js","helper.js","components/MailTo/MailTo.js","views/Users.js","views/UserProfile.js","layouts/Admin/Admin.js","routes.js","assets/img/ccda-logo.svg","assets/img/react-logo.png","layouts/RTL/RTL.js","assets/icons/pass-show.svg","assets/icons/hide-pass.svg","pages/login/Login.js","pages/forgot-password/ForgotPass.js","components/ThemeWrapper/ThemeWrapper.js","components/BackgroundColorWrapper/BackgroundColorWrapper.js","components/ProtectedRoute/ProtectedRoute.js","index.js"],"names":["chart1_2_options","maintainAspectRatio","legend","display","tooltips","backgroundColor","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","barPercentage","gridLines","drawBorder","color","zeroLineColor","scaleLabel","labelString","ticks","suggestedMin","suggestedMax","padding","fontColor","xAxes","chartExample1","data1","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","data","data2","data3","options","chartExample2","module","exports","chartExample3","hoverBackgroundColor","chartExample4","API_URL","TOKEN","USER_ID","API","axios","create","baseURL","timeout","headers","sessionStorage","getItem","FILE_API","interceptors","request","use","config","token","error","Promise","reject","PUBLIC_API","JsonClient","endpoint","a","body","customConfig","method","JSON","stringify","window","fetch","response","json","ok","console","log","clear","location","href","Error","statusText","message","get","post","AdminNavbar","props","history","useHistory","React","useState","collapseOpen","setcollapseOpen","modalSearch","setmodalSearch","setcolor","user","useSelector","state","auth","useEffect","addEventListener","updateColor","removeEventListener","innerWidth","logout","then","res","push","toggleModalSearch","Navbar","className","classNames","expand","Container","fluid","toggled","sidebarOpened","NavbarToggler","onClick","toggleSidebar","Collapse","navbar","isOpen","Nav","format","ticking","UncontrolledDropdown","nav","DropdownToggle","caret","e","preventDefault","first_name","last_name","alt","src","require","default","DropdownMenu","right","tag","NavLink","DropdownItem","divider","Modal","modalClassName","toggle","ModalHeader","Input","placeholder","type","Footer","ps","NavItem","Date","getFullYear","target","backgroundColors","BackgroundColorContext","createContext","changeColor","Sidebar","useLocation","sidebarRef","useRef","navigator","platform","indexOf","PerfectScrollbar","current","suppressScrollX","suppressScrollY","destroy","routes","logo","rtlActive","logoImg","logoText","undefined","outterLink","imgSrc","text","to","innerLink","ref","map","prop","key","redirect","routeName","layout","path","pathname","activeClassName","icon","name","defaultProps","themes","ThemeContext","theme","changeTheme","FixedPlugin","fetchUserDetailsThunk","createAsyncThunk","user_id","authSlice","createSlice","initialState","status","reducers","extraReducers","pending","action","fulfilled","payload","rejected","fetchPondsData","pondsSlice","fetchUsersData","userSlice","configureStore","reducer","ponds","users","OwnerUpdateModal","animatedComponents","makeAnimated","dispatch","useDispatch","person","setSelectedPerson","useSnackbar","enqueueSnackbar","closeSnackbar","temp","Array","from","forEach","idx","value","id","closeForm","close","show","size","style","pond","ModalBody","Form","FormGroup","onChange","actionMeta","components","closeMenuOnSelect","isMulti","Button","asset_ids","String","variant","Dashboard","searchText","setSearchText","showPersonUpdate","setShowPersonUpdate","setbigChartData","chartDataType","setChartDataType","selectedData","setSelectedData","showTaskForm","setShowTaskForm","currentActiveTab","setCurrentActiveTab","tab","selected_pond","setSelectedPond","selected_pond_wise_graph_data","setSelectedPondDeviceData","pond_device_data","setPondDeviceData","setMessage","show_device_data_new","result","ph_labels","ph_datasets","temp_labels","temp_datasets","tds_labels","tds_datasets","property","time","element","device_name","ph","tds","ph_options","temp_options","tds_options","generate_graph_data_new","catch","err","asset_id","Row","Col","lg","md","Card","CardHeader","CardBody","event","Table","hover","title","owner_name","phone","total_device","comments","ButtonToolbar","ButtonGroup","ButtonToggle","show_pond_device_data","xs","sm","PaperIcon","PH","length","active","disabled","tabs","TabContent","activeTab","TabPane","tabId","xl","borderless","scope","loop","margin","responsiveClass","smartSpeed","autoplay","dots","items","controls","Mailto","email","subject","children","encodeURIComponent","Users","showAssetUpdateModal","setShowAssetUpdateModal","setSelectedUser","selected_user","assets","setAssets","selectedAssets","setSelectedAssets","get_free_assets","asset","ast_name","option","usr_email","user_phone","phn_cell","is_active","UserProfile","component","Admin","mainPanelRef","document","documentElement","setsidebarOpened","classList","remove","tables","querySelectorAll","i","add","scrollTop","scrollingElement","getBrandText","Consumer","Fragment","brandText","RTL","Login","isRevealPwd","setIsRevealPwd","setEmail","password","setPassword","submitted","setSubmitted","login","setItem","user_data","Label","FormFeedback","valid","FormText","for","onKeyPress","hidePwdImg","showPwdImg","prevState","LinearProgress","ForgotPassword","ThemeContextWrapper","setTheme","Provider","BackgroundColorWrapper","setColor","ProtectedRoute","Component","restOfProps","isAuthenticated","render","ReactDOM","store","maxSnack","anchorOrigin","vertical","horizontal","AdminLayout","ForgotPass","getElementById"],"mappings":"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","file":"static/js/main.c6f9f1c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/anime3.4438e506.png\";","/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n// ##############################\r\n// // // Chart variables\r\n// #############################\r\n\r\n// chartExample1 and chartExample2 options\r\nlet chart1_2_options = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  tooltips: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    titleFontColor: \"#333\",\r\n    bodyFontColor: \"#666\",\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: \"nearest\",\r\n    intersect: 0,\r\n    position: \"nearest\",\r\n  },\r\n  responsive: true,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        \r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.0)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: 'pH & Temp. (C)'\r\n        },\r\n        ticks: {\r\n          suggestedMin: 60,\r\n          suggestedMax: 125,\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n     \r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.1)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: 'Time'\r\n        },\r\n        ticks: {\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet phData = {\r\n  data1: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: \"My First dataset\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [0, 5, 10, 15, 20, 25, 30, 35, 40],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n\r\nlet chartExample1 = {\r\n  data1: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"01\",\r\n        \"3\",\r\n        \"5\",\r\n        \"7\",\r\n        \"9\",\r\n        \"11\",\r\n        \"13\",\r\n        \"15\",\r\n        \"17\",\r\n        \"19\",\r\n        \"21\",\r\n        \"23\",\r\n        '25',\r\n        '27',\r\n        '29',\r\n        '31'\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"My First dataset\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [0, 5, 10, 15, 20, 25, 30, 35, 40],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data2: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"JAN\",\r\n        \"FEB\",\r\n        \"MAR\",\r\n        \"APR\",\r\n        \"MAY\",\r\n        \"JUN\",\r\n        \"JUL\",\r\n        \"AUG\",\r\n        \"SEP\",\r\n        \"OCT\",\r\n        \"NOV\",\r\n        \"DEC\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"My First dataset\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data3: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"JAN\",\r\n        \"FEB\",\r\n        \"MAR\",\r\n        \"APR\",\r\n        \"MAY\",\r\n        \"JUN\",\r\n        \"JUL\",\r\n        \"AUG\",\r\n        \"SEP\",\r\n        \"OCT\",\r\n        \"NOV\",\r\n        \"DEC\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"pH & Temp. (Celcius)\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet chartExample2 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\r\n      datasets: [\r\n        {\r\n          label: \"Data\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [80, 100, 70, 80, 120, 80],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet chartExample3 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\r\n\r\n    return {\r\n      labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\r\n      datasets: [\r\n        {\r\n          label: \"Countries\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: \"#d048b6\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          data: [53, 20, 10, 80, 100, 45],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltips: {\r\n      backgroundColor: \"#f5f5f5\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(225,78,202,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            suggestedMin: 60,\r\n            suggestedMax: 120,\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(225,78,202,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nconst chartExample4 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\r\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\r\n\r\n    return {\r\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\r\n      datasets: [\r\n        {\r\n          label: \"My First dataset\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#00d6b4\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#00d6b4\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#00d6b4\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [90, 27, 60, 12, 80],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      backgroundColor: \"#f5f5f5\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          barPercentage: 1.6,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(29,140,248,0.0)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'pH & Temp. (0C)'\r\n          },\r\n          ticks: {\r\n            suggestedMin: 50,\r\n            suggestedMax: 125,\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n\r\n      xAxes: [\r\n        {\r\n          barPercentage: 1.6,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(0,242,195,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'Time'\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\nmodule.exports = {\r\n  chartExample1, // in src/views/Dashboard.js\r\n  chartExample2, // in src/views/Dashboard.js\r\n  chartExample3, // in src/views/Dashboard.js\r\n  chartExample4, // in src/views/Dashboard.js\r\n};\r\n","export default __webpack_public_path__ + \"static/media/emilyz.105ff23d.jpg\";","export default __webpack_public_path__ + \"static/media/fish-float.721e17ee.svg\";","import axios from 'axios';\r\nconst status = 'prod'\r\nexport const API_URL = status === 'prod' ? 'http://dma.com.bd:8005/' : 'http://localhost:8000/'\r\nexport const TOKEN = \"access-token\"\r\nexport const USER_ID = \"user_id\"\r\nexport const USER = \"user-data\"\r\nexport const PERMISSIONS = \"user_permissions\"\r\nexport const BASE_URL = status === 'prod' ? 'http://dma.com.bd:8005' : 'http://localhost:8000'\r\nexport const credentials = {\r\n  \"GOOGLE_CLIENT_ID\": \"705019730299-kfb5arnuisah2135tka05uka6h7v901a.apps.googleusercontent.com\",\r\n  \"FACEBOOK_APP_ID\": \"788095958681659\"\r\n}\r\nexport const API = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 100000,\r\n  headers: {\r\n    \"Authorization\": `Bearer ${sessionStorage.getItem(TOKEN)}`,\r\n    \"Content-Type\": \"application/json\",\r\n   // \"Access-Control-Allow-Origin\": \"*\"\r\n  }\r\n})\r\nexport const FILE_API = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 100000,\r\n  headers: {\r\n    \"Authorization\": `Bearer ${sessionStorage.getItem(TOKEN)}`,\r\n    \"Content-Type\": \"multipart/form-data\",\r\n   // \"Access-Control-Allow-Origin\": \"*\"\r\n  }\r\n})\r\nAPI.interceptors.request.use(\r\n  function(config) {\r\n    const token = sessionStorage.getItem(TOKEN); \r\n    if (token) {\r\n      config.headers[\"Authorization\"] = 'Bearer ' + token;\r\n    }\r\n    return config;\r\n  },\r\n  function(error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\nFILE_API.interceptors.request.use(\r\n  function(config) {\r\n    const token = sessionStorage.getItem(TOKEN); \r\n    if (token) {\r\n      config.headers[\"Authorization\"] = 'Bearer ' + token;\r\n    }\r\n    return config;\r\n  },\r\n  function(error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\nexport const PUBLIC_API = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 100000,\r\n  headers:{\r\n    \"Content-Type\": \"application/json\"\r\n  }\r\n})\r\n\r\nexport const PUBLIC_FORM_API = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 100000,\r\n  headers:{\r\n    \"Content-Type\": \"multipart/form-data\",\r\n  }\r\n})\r\n\r\nexport const isLoggedIn=()=>{\r\n  if(sessionStorage.getItem(TOKEN)===null){\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n// A tiny wrapper around fetch(), borrowed from\r\n// https://kentcdodds.com/blog/replace-axios-with-a-simple-custom-fetch-wrapper\r\n\r\nexport async function JsonClient(endpoint, { body, ...customConfig } = {}) {\r\n  const headers = { 'Content-Type': 'application/json' }\r\n  const config = {\r\n    method: body ? 'POST' : 'GET',\r\n    ...customConfig,\r\n    headers: {\r\n      ...headers,\r\n      \"Authorization\": `Bearer ${sessionStorage.getItem(TOKEN)}`,\r\n      'Content-Type': 'application/json',\r\n      ...customConfig.headers,\r\n    },\r\n  }\r\n\r\n  if (body) {\r\n    config.body = JSON.stringify(body)\r\n  }\r\n\r\n  let data\r\n  try {\r\n    const response = await window.fetch(API_URL+endpoint, config)\r\n    data = await response.json()\r\n    \r\n    if (response.ok) {\r\n      return data\r\n    }\r\n    else{\r\n      console.log('endpoint',endpoint,'error_code',response.ok)\r\n      console.log('error',response)\r\n      sessionStorage.clear()\r\n      window.location.href = '/'\r\n    }\r\n    throw new Error(response.statusText)\r\n  } catch (err) {\r\n    return Promise.reject(err.message ? err.message : data)\r\n  }\r\n}\r\n\r\nJsonClient.get = function (endpoint, customConfig = {}) {\r\n  return JsonClient(endpoint, { ...customConfig, method: 'GET' })\r\n}\r\n\r\nJsonClient.post = function (endpoint, body, customConfig = {}) {\r\n  return JsonClient(endpoint, { ...customConfig, body })\r\n}\r\n\r\n\r\nexport const drawerWidth = 312\r\nexport const PALETTE_MODE=\"light\"\r\n","\r\nimport React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\nimport Clock from 'react-live-clock';\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Input,\r\n  InputGroup,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Modal,\r\n  NavbarToggler,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\"\r\nimport './AdminNavbar.css'\r\nimport { API } from \"config\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AdminNavbar(props) {\r\n  let history = useHistory()\r\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\r\n  const [modalSearch, setmodalSearch] = React.useState(false);\r\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\r\n  const user = useSelector(state=>state.auth.data)\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", updateColor);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", updateColor);\r\n    };\r\n  });\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  const updateColor = () => {\r\n    if (window.innerWidth < 993 && collapseOpen) {\r\n      setcolor(\"bg-white\");\r\n    } else {\r\n      setcolor(\"navbar-transparent\");\r\n    }\r\n  };\r\n  // this function opens and closes the collapse on small devices\r\n  const toggleCollapse = () => {\r\n    if (collapseOpen) {\r\n      setcolor(\"navbar-transparent\");\r\n    } else {\r\n      setcolor(\"bg-white\");\r\n    }\r\n    setcollapseOpen(!collapseOpen);\r\n  };\r\n  const logout=()=>{\r\n    API.get('auth/logout').then((res)=>{\r\n      console.log(res)\r\n      sessionStorage.clear()\r\n      history.push('/login')\r\n    })\r\n    \r\n  }\r\n  // this function is to open the Search modal\r\n  const toggleModalSearch = () => {\r\n    setmodalSearch(!modalSearch);\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\r\n        <Container fluid>\r\n          <div className=\"navbar-wrapper\">\r\n            <div\r\n              className={classNames(\"navbar-toggle d-inline\", {\r\n                toggled: props.sidebarOpened,\r\n              })}\r\n            >\r\n              <NavbarToggler onClick={props.toggleSidebar}>\r\n                <span className=\"navbar-toggler-bar bar1\" />\r\n                <span className=\"navbar-toggler-bar bar2\" />\r\n                <span className=\"navbar-toggler-bar bar3\" />\r\n              </NavbarToggler>\r\n            </div>\r\n            {/* <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n              {props.brandText}\r\n            </NavbarBrand> */}\r\n          </div>\r\n          <NavbarToggler onClick={toggleCollapse}>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n          </NavbarToggler>\r\n          <Collapse navbar isOpen={collapseOpen}>\r\n           \r\n          \r\n        \r\n            <Nav className=\"ml-auto\" navbar>\r\n            <div className=\"show-datetime mr-auto\">\r\n                <span className=\"show-date\"><Clock format={'dddd, MMM Mo, YYYY'}/></span>\r\n                <span className=\"show-time\"><Clock  format={'h:mm:ssa'} ticking={true}/></span>\r\n              </div>\r\n              {/* <InputGroup className=\"search-bar\">\r\n                <Button color=\"link\" onClick={toggleModalSearch}>\r\n                  <i className=\"tim-icons icon-zoom-split\" />\r\n                  <span className=\"d-lg-none d-md-block\">Search</span>\r\n                </Button>\r\n              </InputGroup> */}\r\n              {/* <UncontrolledDropdown nav>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"default\"\r\n                  data-toggle=\"dropdown\"\r\n                  nav\r\n                >\r\n                  <div className=\"notification d-none d-lg-block d-xl-block\" />\r\n                  <i className=\"tim-icons icon-sound-wave\" />\r\n                  <p className=\"d-lg-none\">Notifications</p>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">\r\n                      Mike John responded to your email\r\n                    </DropdownItem>\r\n                  </NavLink>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">\r\n                      You have 5 more tasks\r\n                    </DropdownItem>\r\n                  </NavLink>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">\r\n                      Your friend Michael is in town\r\n                    </DropdownItem>\r\n                  </NavLink>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">\r\n                      Another notification\r\n                    </DropdownItem>\r\n                  </NavLink>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">\r\n                      Another one\r\n                    </DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown> */}\r\n          \r\n              <UncontrolledDropdown nav>\r\n             \r\n                <DropdownToggle className=\"mr-4\"\r\n                  caret\r\n                  color=\"default\"\r\n                  nav\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <span className=\"user-name-view\">{user.first_name+' '+user.last_name}</span>\r\n                  <div className=\"photo\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/anime3.png\").default}\r\n                    />\r\n                       \r\n                    </div>\r\n                 \r\n                  \r\n                  <b className=\"caret d-none d-lg-block d-xl-block\" />\r\n                  <p className=\"d-lg-none custom-logout\" onClick={logout}>Log out</p>\r\n                </DropdownToggle>\r\n\r\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">Profile</DropdownItem>\r\n                  </NavLink>\r\n                  {/* <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">Settings</DropdownItem>\r\n                  </NavLink> */}\r\n                  <DropdownItem divider tag=\"li\" />\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem onClick={logout} className=\"nav-item\">Logout</DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              \r\n              <NavLink className=\"log-out-nav\" onClick={logout}>Logout</NavLink>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      \r\n      <Modal\r\n        modalClassName=\"modal-search\"\r\n        isOpen={modalSearch}\r\n        toggle={toggleModalSearch}\r\n      >\r\n        <ModalHeader>\r\n          <Input placeholder=\"SEARCH\" type=\"text\" />\r\n          <button\r\n            aria-label=\"Close\"\r\n            className=\"close\"\r\n            onClick={toggleModalSearch}\r\n          >\r\n            <i className=\"tim-icons icon-simple-remove\" />\r\n          </button>\r\n        </ModalHeader>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminNavbar;\r\n","import React from \"react\";\r\nimport { Container, Nav, NavItem, NavLink } from \"reactstrap\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container fluid>\r\n        <Nav>\r\n          <NavItem>\r\n            <NavLink href=\"https://dma-bd.com\">\r\n              DMA\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href=\"https://dma-bd.com/about-me/home/\">\r\n              About Us\r\n            </NavLink>\r\n          </NavItem>\r\n          {/* <NavItem>\r\n            <NavLink href=\"https://www.creative-tim.com/blog?ref=bdr-user-archive-footer\">\r\n              Blog\r\n            </NavLink>\r\n          </NavItem> */}\r\n        </Nav>\r\n        <div className=\"copyright\">\r\n          © {new Date().getFullYear()} made with{\" \"}\r\n          <i className=\"tim-icons icon-heart-2\" /> by{\" \"}\r\n          <a\r\n            href=\"https://dma-bd.com\"\r\n            target=\"_blank\"\r\n          >\r\n            DMA\r\n          </a>{\" \"}\r\n          for a better web.\r\n        </div>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\r\n// nodejs library to set properties for components\r\nimport { PropTypes } from \"prop-types\";\r\n\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// reactstrap components\r\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\r\nimport {\r\n  BackgroundColorContext,\r\n  backgroundColors,\r\n} from \"contexts/BackgroundColorContext\";\r\n\r\nvar ps;\r\n\r\nfunction Sidebar(props) {\r\n  const location = useLocation();\r\n  const sidebarRef = React.useRef(null);\r\n  // verifies if routeName is the one active (in browser input)\r\n  const activeRoute = (routeName) => {\r\n    return location.pathname === routeName ? \"active\" : \"\";\r\n  };\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(sidebarRef.current, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false,\r\n      });\r\n    }\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n      }\r\n    };\r\n  });\r\n  const linkOnClick = () => {\r\n    document.documentElement.classList.remove(\"nav-open\");\r\n  };\r\n  const { routes, rtlActive, logo } = props;\r\n  let logoImg = null;\r\n  let logoText = null;\r\n  if (logo !== undefined) {\r\n    if (logo.outterLink !== undefined) {\r\n      logoImg = (\r\n        <a\r\n          href={logo.outterLink}\r\n          className=\"simple-text\"\r\n          target=\"_blank\"\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          <div className=\"logo-img\">\r\n            <img src={logo.imgSrc} alt=\"ccda-logo\" />\r\n          </div>\r\n        </a>\r\n      );\r\n      logoText = (\r\n        <a\r\n          href={logo.outterLink}\r\n          className=\"simple-text logo-normal\"\r\n          target=\"_blank\"\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          {logo.text}\r\n        </a>\r\n      );\r\n    } else {\r\n      logoImg = (\r\n        <Link\r\n          to={logo.innerLink}\r\n\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          <div className=\"logo-img\">\r\n            <img src={logo.imgSrc} alt=\"react-logo\" className=\"fish-logo\" />\r\n          </div>\r\n        </Link>\r\n      );\r\n      logoText = (\r\n        <Link\r\n          to={logo.innerLink}\r\n\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          {logo.text}\r\n        </Link>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar-wrapper\" ref={sidebarRef}>\r\n        {logoImg !== null || logoText !== null ? (\r\n          <div className=\"logo\">\r\n            {logoImg}\r\n            {logoText}\r\n          </div>\r\n        ) : null}\r\n        <Nav>\r\n          {routes.map((prop, key) => {\r\n            if (prop.redirect) return null;\r\n            return (\r\n              <li\r\n                className={\r\n                  activeRoute(prop.layout+prop.path)\r\n                }\r\n                key={key}\r\n              >\r\n                <NavLink\r\n                  to={prop.layout + prop.path}\r\n                  className=\"nav-link\"\r\n                  activeClassName=\"active\"\r\n                  onClick={props.toggleSidebar}\r\n                >\r\n                  <i className={prop.icon} />\r\n                  <p className=\"dashboard-link\">{prop.name}</p>\r\n                </NavLink>\r\n              </li>\r\n            );\r\n          })}\r\n          {/* <li className=\"active-pro\">\r\n                <ReactstrapNavLink href=\"https://www.creative-tim.com/product/black-dashboard-pro-react?ref=bdr-user-archive-sidebar-upgrade-pro\">\r\n                  <i className=\"tim-icons icon-spaceship\" />\r\n                  <p>Upgrade to PRO</p>\r\n                </ReactstrapNavLink>\r\n              </li> */}\r\n        </Nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  rtlActive: false,\r\n  routes: [{}],\r\n};\r\n\r\nSidebar.propTypes = {\r\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\r\n  // insde the links of this component\r\n  rtlActive: PropTypes.bool,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  logo: PropTypes.shape({\r\n    // innerLink is for links that will direct the user within the app\r\n    // it will be rendered as <Link to=\"...\">...</Link> tag\r\n    innerLink: PropTypes.string,\r\n    // outterLink is for links that will direct the user outside the app\r\n    // it will be rendered as simple <a href=\"...\">...</a> tag\r\n    outterLink: PropTypes.string,\r\n    // the text of the logo\r\n    text: PropTypes.node,\r\n    // the image src of the logo\r\n    imgSrc: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default Sidebar;\r\n","import { createContext } from \"react\";\r\n\r\nexport const backgroundColors = {\r\n  primary: \"primary\",\r\n  blue: \"blue\",\r\n  green: \"green\",\r\n};\r\n\r\nexport const BackgroundColorContext = createContext({\r\n  color: backgroundColors.blue,\r\n  changeColor: (color) => {},\r\n});\r\n","import { createContext } from \"react\";\n\nexport const themes = {\n  dark: \"\",\n  light: \"white-content\",\n};\n\nexport const ThemeContext = createContext({\n  theme: themes.dark,\n  changeTheme: () => {},\n});\n","export default __webpack_public_path__ + \"static/media/up-arrow.05742683.svg\";","import React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Button, Dropdown, DropdownToggle, Badge } from \"reactstrap\";\r\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\r\nimport { backgroundColors } from \"contexts/BackgroundColorContext\";\r\n\r\nfunction FixedPlugin(props) {\r\n  const [dropDownIsOpen, setdropDownIsOpen] = React.useState(false);\r\n  const handleClick = () => {\r\n    setdropDownIsOpen(!dropDownIsOpen);\r\n  };\r\n  return (\r\n    <div className=\"fixed-plugin\">\r\n      <Dropdown isOpen={dropDownIsOpen} toggle={handleClick}>\r\n        <DropdownToggle tag=\"div\">\r\n          <i className=\"fa fa-cog fa-2x\" />\r\n        </DropdownToggle>\r\n        <ul className=\"dropdown-menu show\">\r\n          <li className=\"header-title\">SIDEBAR BACKGROUND</li>\r\n          <li className=\"adjustments-line\">\r\n            <div className=\"badge-colors text-center\">\r\n              <Badge\r\n                color=\"primary\"\r\n                className={\r\n                  props.bgColor === backgroundColors.primary ? \"active\" : \"\"\r\n                }\r\n                onClick={() => {\r\n                  props.handleBgClick(backgroundColors.primary);\r\n                }}\r\n              />{\" \"}\r\n              <Badge\r\n                color=\"info\"\r\n                className={\r\n                  props.bgColor === backgroundColors.blue ? \"active\" : \"\"\r\n                }\r\n                onClick={() => {\r\n                  props.handleBgClick(backgroundColors.blue);\r\n                }}\r\n              />{\" \"}\r\n              <Badge\r\n                color=\"success\"\r\n                className={\r\n                  props.bgColor === backgroundColors.green ? \"active\" : \"\"\r\n                }\r\n                onClick={() => {\r\n                  props.handleBgClick(backgroundColors.green);\r\n                }}\r\n              />{\" \"}\r\n            </div>\r\n          </li>\r\n          <li className=\"adjustments-line text-center color-change\">\r\n            <ThemeContext.Consumer>\r\n              {({ changeTheme }) => (\r\n                <>\r\n                  <span className=\"color-label\">LIGHT MODE</span>{\" \"}\r\n                  <Badge\r\n                    className=\"light-badge mr-2\"\r\n                    onClick={() => changeTheme(themes.light)}\r\n                  />{\" \"}\r\n                  <Badge\r\n                    className=\"dark-badge ml-2\"\r\n                    onClick={() => changeTheme(themes.dark)}\r\n                  />{\" \"}\r\n                  <span className=\"color-label\">DARK MODE</span>{\" \"}\r\n                </>\r\n              )}\r\n            </ThemeContext.Consumer>\r\n          </li>\r\n          {/* <li className=\"button-container\">\r\n            <Button\r\n              href=\"https://www.creative-tim.com/product/black-dashboard-react\"\r\n              color=\"primary\"\r\n              block\r\n              className=\"btn-round\"\r\n            >\r\n              Download Now\r\n            </Button>\r\n            <Button\r\n              color=\"default\"\r\n              block\r\n              className=\"btn-round\"\r\n              outline\r\n              href=\"https://demos.creative-tim.com/black-dashboard-react/#/documentation/tutorial\"\r\n            >\r\n              Documentation\r\n            </Button>\r\n          </li> */}\r\n          {/* <li className=\"header-title\">Want more components?</li>\r\n          <li className=\"button-container\">\r\n            <Button\r\n              href=\"https://www.creative-tim.com/product/black-dashboard-pro-react\"\r\n              className=\"btn-round\"\r\n              disabled\r\n              block\r\n              color=\"danger\"\r\n            >\r\n              Get pro version\r\n            </Button>\r\n          </li> */}\r\n        </ul>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FixedPlugin;\r\n","export default __webpack_public_path__ + \"static/media/Paper.b64c5f63.svg\";","export default __webpack_public_path__ + \"static/media/safe-pond.288cf28f.svg\";","export default __webpack_public_path__ + \"static/media/refresh.da117d36.svg\";","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { JsonClient } from '../../config'\r\nconst initialState = {\r\n  data: [],\r\n  status: 'idle',\r\n  error: ''\r\n}\r\n\r\nexport const fetchUserDetailsThunk = createAsyncThunk('auth/user', async (user_id) => {\r\n  const response = await JsonClient.get('auth/user/details/' + user_id+'/')\r\n  console.log(\"user details\", response)\r\n  return response.data\r\n})\r\n\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n\r\n  },\r\n  extraReducers: {\r\n    [fetchUserDetailsThunk.pending]: (state, action) => {\r\n      state.status = 'loading'\r\n    },\r\n    [fetchUserDetailsThunk.fulfilled]: (state, action) => {\r\n      state.status = 'succeeded'\r\n      // Add any fetched posts to the array\r\n      state.data = action.payload\r\n    },\r\n    [fetchUserDetailsThunk.rejected]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.error.message\r\n    },\r\n  }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\n\r\nexport default authSlice.reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { JsonClient } from '../../config'\r\nconst initialState = {\r\n  data: [],\r\n  status: 'idle',\r\n  error: ''\r\n}\r\n\r\nexport const fetchPondsData = createAsyncThunk('wbs/fetchPondsData', async (data) => {\r\n  const response = await JsonClient.post('devices/data/with/assets/',data)\r\n  console.log(\"all ponds data\", response)\r\n  return response.data\r\n})\r\n\r\nexport const pondsSlice = createSlice({\r\n  name: 'ponds',\r\n  initialState,\r\n  reducers: {\r\n\r\n  },\r\n  extraReducers: {\r\n    [fetchPondsData.pending]: (state, action) => {\r\n      state.status = 'loading'\r\n    },\r\n    [fetchPondsData.fulfilled]: (state, action) => {\r\n      state.status = 'succeeded'\r\n      // Add any fetched posts to the array\r\n      state.data = action.payload\r\n    },\r\n    [fetchPondsData.rejected]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.error.message\r\n    },\r\n  }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\n\r\nexport default pondsSlice.reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { JsonClient } from '../../config'\r\nconst initialState = {\r\n  data: [],\r\n  status: 'idle',\r\n  error: ''\r\n}\r\n\r\nexport const fetchUsersData = createAsyncThunk('wbs/fetchUsersData', async (data) => {\r\n  const response = await JsonClient.get('auth/user/list/')\r\n  console.log(\"all users data\", response)\r\n  return response.data\r\n})\r\n\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n\r\n  },\r\n  extraReducers: {\r\n    [fetchUsersData.pending]: (state, action) => {\r\n      state.status = 'loading'\r\n    },\r\n    [fetchUsersData.fulfilled]: (state, action) => {\r\n      state.status = 'succeeded'\r\n      // Add any fetched posts to the array\r\n      state.data = action.payload\r\n    },\r\n    [fetchUsersData.rejected]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.error.message\r\n    },\r\n  }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\n\r\nexport default userSlice.reducer\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport authSlice from './slices/authSlice'\r\nimport pondsSlice from './slices/pondsSlice'\r\nimport userSlice from './slices/userSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    auth:authSlice,\r\n    ponds: pondsSlice,\r\n    users: userSlice\r\n  },\r\n})\r\n","import React,{useState} from 'react'\r\nimport { API } from 'config'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    Form,\r\n    FormGroup,\r\n  } from \"reactstrap\";\r\nimport { useSnackbar } from 'notistack';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { fetchPondsData } from 'store/slices/pondsSlice';\r\nimport { USER_ID } from 'config';\r\n\r\nconst OwnerUpdateModal = (props) => {\r\n    const animatedComponents = makeAnimated();\r\n    const dispatch = useDispatch()\r\n    const [person,setSelectedPerson]=useState()\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar()\r\n    const users = useSelector(state => {\r\n        let temp=[]\r\n        Array.from(state.users.data).forEach((user,idx)=>{\r\n            temp.push({label:user.first_name+' '+user.last_name,value:user.id,data:user})\r\n        })\r\n        return temp\r\n    })\r\n    function closeForm(){\r\n        props.close()\r\n    }\r\n    \r\n    const handlePersonChange=(options,actionMeta)=>{\r\n        setSelectedPerson(options.data)\r\n    }\r\n    const assign_user_to_pond = () => {\r\n        console.log({user_id:person.id,asset_ids:String(props.pond.id)})\r\n        API.post('assets/assign/to/user/',{user_id:person.id,asset_ids:String(props.pond.id)}).then((res) => {\r\n            console.log(res)\r\n            closeForm()\r\n            dispatch(fetchPondsData({user_id:sessionStorage.getItem(USER_ID)}))\r\n            enqueueSnackbar('Person assigned to pond', { variant: 'success' })\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={props.show}\r\n                size='md'\r\n                className=\"p-2\"\r\n            >\r\n                <ModalHeader className=\"custom-modal-header\">\r\n                    <span style={{ color: 'white' }}>Assign Person to {props.pond?.name}</span>\r\n                </ModalHeader>\r\n                <ModalBody className=\"custom-modal-design\" >\r\n                    <Form>\r\n                        {/* <FormGroup>\r\n                            <Input value={message} onChange={(e)=>setMessage(e.target.value)} type=\"textarea\" className=\"modal-custom-input\" placeholder=\"Type here...\" />\r\n                        </FormGroup> */}\r\n                        <FormGroup>\r\n                            <Select onChange={handlePersonChange} components={animatedComponents} closeMenuOnSelect={true} isMulti={false} options={users} />\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <div className=\"moadl-button-holder\">\r\n                        <Button type=\"button\" onClick={assign_user_to_pond} className=\"okay-button-modal\">\r\n                            Save\r\n                        </Button>\r\n                        <Button className=\"cancel-button-modal ml-2\"\r\n                            onClick={() => closeForm()}\r\n                        >\r\n                            cancel\r\n                        </Button>\r\n                    </div>\r\n                </ModalBody>\r\n                {/* <ModalFooter className=\"p-2\">\r\n          \r\n                </ModalFooter> */}\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OwnerUpdateModal","import React, { useEffect, useRef, useState } from \"react\";\r\nimport UpArrow from \"../assets/icons/up-arrow.svg\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// react plugin used to create charts\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport SearchField from 'react-search-field';\r\nimport SafePondDot from '../assets/icons/safe-pond.svg'\r\nimport PaperIcon from '../assets/icons/Paper.svg'\r\nimport RefreshIcon from '../assets/icons/refresh.svg'\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Nav,\r\n  NavLink,\r\n  NavItem,\r\n  Table,\r\n  ButtonToolbar,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n  Col,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,ButtonToggle,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n\r\n} from \"reactstrap\";\r\n\r\n// core components\r\nimport {\r\n  chartExample1,\r\n  chartExample2,\r\n\r\n  chartExample4,\r\n} from \"variables/charts.js\";\r\nimport \"../../src/assets/css/Dashboard.css\";\r\nimport '../index.css'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport { API } from \"config\";\r\nimport { generate_graph_data_new,generate_graph_data } from \"helper\";\r\nimport { useLocation } from 'react-router';\r\nimport { useSnackbar } from 'notistack';\r\nimport store from \"store/store\";\r\nimport {scroller} from 'react-scroll'\r\nimport OwnerUpdateModal from \"components/OwnerUpdateModal/OwnerUpdateModal\";\r\nimport { USER_ID } from \"config\";\r\nimport { fetchPondsData } from \"store/slices/pondsSlice\";\r\n\r\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop)\r\n\r\nfunction Dashboard(props) {\r\n  const graph_div_ref = useRef(null)\r\n  const[searchText,setSearchText]=useState('')\r\n  const [showPersonUpdate,setShowPersonUpdate]=useState(false)\r\n  const executeScroll = () => graph_div_ref.current.scrollIntoView()\r\n  // const executeScroll = () => scrollToRef(graph_div_ref)\r\n  const [bigChartData, setbigChartData] = React.useState(\"data1\");\r\n  const [chartDataType, setChartDataType] = React.useState(\"daily\");\r\n  const [selectedData,setSelectedData]=useState({data:'ph',options:'ph_options'})\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\r\n  const dispatch = useDispatch()\r\n  let location = useLocation()\r\n  const ponds = useSelector(state=>state.ponds.data)\r\n  const setBgChartData = (name) => {\r\n    setbigChartData(name);\r\n  };\r\n  // const device_data_ref = React.forwardRef(null)\r\n  {/**Code for writing table search */ }\r\n  function onChange(value, event) {\r\n    console.log(value,event)\r\n    setSearchText(value)\r\n  }\r\n  const [showTaskForm, setShowTaskForm] = useState(false);\r\n  const [currentActiveTab, setCurrentActiveTab] = useState('1');\r\n  const toggleTaskForm = () => {\r\n    setShowTaskForm(!showTaskForm);\r\n  };\r\n  const closeForm = () => {\r\n    setShowTaskForm(false)\r\n  }\r\n  // Toggle active state for Tab\r\n  const toggle = tab => {\r\n    if (currentActiveTab !== tab) setCurrentActiveTab(tab);\r\n  }\r\n  const [selected_pond,setSelectedPond]=useState()\r\n  const [selected_pond_wise_graph_data,setSelectedPondDeviceData]=useState()\r\n  const [pond_device_data,setPondDeviceData]=useState()\r\n  \r\n  useEffect(()=>{\r\n    // console.log(device_data_ref.current)\r\n  },[searchText])\r\n  const [message,setMessage]=useState()\r\n  const send_instruction=()=>{\r\n    API.post('assets/send/message/',{message:message,asset_id:selected_pond.id}).then((res)=>{\r\n      console.log(res.data)\r\n      closeForm()\r\n      dispatch(fetchPondsData({user_id:sessionStorage.getItem(USER_ID)}))\r\n      enqueueSnackbar('Successfully sent!',{variant:'success'})\r\n    }).catch(err=>{\r\n      enqueueSnackbar('Something went wrong',{variant:'warning'})\r\n    })\r\n  }\r\n  const show_device_data=(pond,type)=>{\r\n    API.get('devices/data/'+pond.id+'?type='+type).then((res)=>{\r\n      console.log('device data API res',res.data)\r\n      if(res.data.data.length>0){\r\n        // window.scrollTo({ behavior: 'smooth', top: device_data_ref.current.offsetTop })\r\n        setSelectedPond(pond)\r\n        setChartDataType(type)\r\n        setPondDeviceData(res.data.data)\r\n        let data=generate_graph_data(res.data.data)\r\n        console.log('graph data',data[0].data)\r\n        setSelectedPondDeviceData(generate_graph_data(res.data.data))\r\n        console.log('sliced',data.length)\r\n      }\r\n      else{\r\n        enqueueSnackbar('This asset has no device',{variant:'warning'})\r\n      }\r\n    }).catch(err=>{\r\n      console.log(err)\r\n      enqueueSnackbar('Something went wrong!',{variant:'warning'})\r\n    })\r\n  }\r\n  const show_device_data_new=(pond,type)=>{\r\n    API.get('devices/individula/sensor/data/'+pond.id+'?type='+type).then((res)=>{\r\n      console.log('device data API res',res.data)\r\n      if(res.data.data){\r\n        // window.scrollTo({ behavior: 'smooth', top: device_data_ref.current.offsetTop })\r\n        setSelectedPond(pond)\r\n        setChartDataType(type)\r\n        setPondDeviceData(res.data.data)\r\n        setSelectedPondDeviceData(generate_graph_data_new(res.data.data))\r\n      }\r\n      else{\r\n        enqueueSnackbar('This asset has no device',{variant:'warning'})\r\n      }\r\n    }).catch(err=>{\r\n      console.log(err)\r\n      enqueueSnackbar('Something went wrong!',{variant:'warning'})\r\n    })\r\n  }\r\n  \r\n  const show_pond_device_data=(pond)=>{\r\n    if(selected_pond?.id==pond.id){\r\n      setSelectedPond(null)\r\n      setSelectedPondDeviceData(null)\r\n      setPondDeviceData(null)\r\n    }\r\n    else{\r\n      show_device_data_new(pond,'daily')\r\n    }\r\n  }\r\n  const is_data_available=(pond_device_data)=>{\r\n    console.log('pond device data',pond_device_data)\r\n    if(pond_device_data.PH.length>0 && pond_device_data.TEMP.length>0 && pond_device_data.TDS.length>0){\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n  const options = {\r\n    margin: 6,\r\n    responsiveClass: true,\r\n    nav: true,\r\n    smartSpeed: 1000,\r\n    autoplay: true,\r\n    dots: true,\r\n    responsive: {\r\n      0: {\r\n        items: 1,\r\n      },\r\n      400: {\r\n        items: 1,\r\n      },\r\n      600: {\r\n        items: 2,\r\n      },\r\n      769: {\r\n        items: 2,\r\n      },\r\n      992: {\r\n        items: 2\r\n      },\r\n      1025: {\r\n        items: 3,\r\n      },\r\n      1224: {\r\n        items: 3\r\n      },\r\n      1600: {\r\n        items: 4\r\n      }\r\n\r\n    },\r\n  }\r\n  React.useEffect(()=>{\r\n    if(location.state?.from == 'login'){\r\n      enqueueSnackbar('Welcome ',{variant:'success'})\r\n    }\r\n    \r\n  },[])\r\n  return (\r\n    <>\r\n      {/**MODAl FOR SHOWING REAL TIME DATA */}\r\n      <Modal\r\n        isOpen={showTaskForm}\r\n        size='md'\r\n        className=\"p-2\"\r\n      >\r\n        <ModalHeader className=\"custom-modal-header\">\r\n          <span style={{color:'white'}}>Send Instruction</span>\r\n        </ModalHeader>\r\n        <ModalBody className=\"custom-modal-design\" >\r\n          <Form>\r\n            <FormGroup>\r\n              <Input value={message} onChange={(e)=>setMessage(e.target.value)} type=\"textarea\" className=\"modal-custom-input\" placeholder=\"Type here...\" />\r\n            </FormGroup>\r\n          </Form>\r\n          <div className=\"moadl-button-holder\">\r\n            <Button className=\"cancel-button-modal\"size=\"sm\"\r\n              onClick={() => closeForm()}\r\n            >\r\n              cancel\r\n            </Button>\r\n            <Button size=\"sm\" type=\"button\" onClick={send_instruction} className=\"okay-button-modal\">\r\n              send\r\n            </Button>\r\n          </div>\r\n        </ModalBody>\r\n        {/* <ModalFooter>\r\n          \r\n        </ModalFooter> */}\r\n      </Modal>\r\n        <OwnerUpdateModal show={showPersonUpdate} pond={selected_pond} close={()=>setShowPersonUpdate(false)}/>\r\n      {/**modal ends */}\r\n      <div className=\"content\">\r\n        <Row>\r\n          {/*______CARD FOR VIEWING DATA IN TABLE______ */}\r\n          <Col lg=\"12\" md=\"12\">\r\n            <Card className=\"table-holder-class\">\r\n\r\n              <CardHeader>\r\n                {/* <CardTitle tag=\"h4\">Simple Table</CardTitle> */}\r\n              </CardHeader>\r\n              <CardBody>\r\n                {/**SERACH FIELD */}\r\n                <SearchField\r\n                  className=\"table-search\"\r\n                  placeholder='Search by Pond ID/Owner Name'\r\n                  onChange={onChange}\r\n                />\r\n                <Table className=\"tablesorter pond-details\" responsive hover>\r\n                  <thead className=\"text-primary\">\r\n                    <tr>\r\n                      <th className=\"pond-value-pointer\">Pond</th>\r\n                      {/* <th className=\"pond-value-pointer\">Person</th> */}\r\n                      <th className=\"pond-value-pointer\">Total Devices</th>\r\n                      <th className=\"text-center pond-value-pointer\">Average pH</th>\r\n                      <th className=\"text-center pond-value-pointer\">Average Temp</th>\r\n                      <th className=\"text-center pond-value-pointer\">Average TDS</th>\r\n                      <th className=\"text-center pond-value-pointer\">Notification</th>\r\n                      <th className=\"text-center pond-value-pointer\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {ponds.map((pond, idx) => (\r\n                      <tr key={idx}>\r\n                        <td className=\"pond-actual-value\" title={pond.owner_name+' '+pond.phone}>{pond.name}</td>\r\n                        {/* <td className=\"pond-actual-value\" title={pond.phone}>{pond.owner_name}</td> */}\r\n                        <td className=\"pond-actual-value text-center\">{pond.total_device}</td>\r\n                        <td className=\"text-center pond-actual-value\">{pond.ph}</td>\r\n                        <td className=\"text-center pond-actual-value\">{pond.temp} ℃</td>\r\n                        <td className=\"text-center pond-actual-value\">{pond.tds} mg/L</td>\r\n                        <td className=\"text-center pond-actual-value\">{pond.comments}</td>\r\n                        <th className=\"text-center pond-actual-value\">\r\n                        <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                          <ButtonGroup aria-label=\"Third group\" className=\"m-auto\" size=\"sm\">\r\n                            <ButtonToggle onClick={()=>show_pond_device_data(pond)} type=\"button\">Detail</ButtonToggle>\r\n                            <ButtonToggle type=\"button\" onClick={()=>{setShowPersonUpdate(true);setSelectedPond(pond);}}>Manage Person</ButtonToggle>\r\n                          </ButtonGroup>\r\n                        </ButtonToolbar>\r\n                        </th>\r\n                        \r\n                        {/* <th className=\"text-center pond-actual-value\">\r\n                          <ButtonToggle type=\"button\" onClick={()=>show_pond_device_data(pond)} className=\"table-view-button\">{selected_pond?.id==pond.id?'Hide':'Detail'}</ButtonToggle>\r\n                        </th> */}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        {selected_pond_wise_graph_data!=undefined && <Row id=\"graph_row\" className=\"graph_row\">\r\n          {/***_________CARDS FOR DISPLAYING CHARTS________ */}\r\n          <Col xs=\"12\" sm=\"12\" lg=\"12\">\r\n            <Card className=\"card-chart card-chart-custom\">\r\n              {/* <Button onClick={() => { setShowTaskForm(true) }} type=\"button\" className=\"ml-auto comment-button\"><img src={PaperIcon} className=\"img-fluid paper-icon\" /></Button> */}\r\n              <CardHeader>\r\n                <Row>\r\n                  <Col className=\"text-left\" sm=\"6\" lg=\"6\">\r\n                    <h6 className=\"pond-name\">\r\n                      {/* <img src={SafePondDot} className=\"name-dot\" /> */}\r\n                      <span className=\"pond-show-safe\">\r\n                        {/* <span style={{fontSize:'14px'}}>(On)</span> */}\r\n                        {selected_pond.name}</span>\r\n                    </h6>\r\n                  </Col>\r\n                  <Col className=\"text-right\" sm=\"6\" lg=\"6\">\r\n                  <Button onClick={() => { setShowTaskForm(true) }} type=\"button\" className=\"ml-auto comment-button\"><img src={PaperIcon} className=\"img-fluid paper-icon\" /></Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  {/**________POND NAME VIEW ______ */}\r\n                  \r\n                  {/**__REALTIME UPDATE BUTTON____ */}\r\n                  {/* <Col sm=\"6\" lg=\"6\" className=\"text-center\" >\r\n                    <Button className=\"refresh-button\"><img src={RefreshIcon} className=\"refresh-btn-icon\" />Real-time Update</Button>\r\n                  </Col> */}\r\n                  {/**___POND PH VALUE______ */}\r\n                  <Col sm=\"12\" md=\"4\" lg=\"4\">\r\n                    <div>\r\n                      {/* <h6 className=\"PH-value\">{Number(pond_device_data[0].ph[pond_device_data[0].ph.length-1]).toFixed(2)} &amp; {Number(pond_device_data[0].temp[pond_device_data[0].temp.length-1]).toFixed(2)}<br/>{pond_device_data[0].time[pond_device_data[0].time.length-1]}</h6> */}\r\n                      <h6 className=\"temp-annonation\">Pond {selectedData.data}</h6>\r\n                      <h6 className=\"temp-annonation\">{pond_device_data.PH[0].time[pond_device_data.PH[0].time.length-1]}</h6>\r\n                    </div>\r\n\r\n                  </Col>\r\n                  {/**___BUTTON GROUP FOR FILTERING CHART VALUE OVER TIME____ */}\r\n                  <Col sm=\"12\" md=\"4\" lg=\"8\" className=\"text-right\">\r\n                    <ButtonGroup className=\"btn-group-toggle mt-2 button-group-graph\" data-toggle=\"buttons\" >\r\n                      {/*__1DAY__ */}\r\n                      <Button tag=\"label\" className={classNames(\"btn-simple\", { active: chartDataType === \"daily\", })} id=\"0\" size=\"sm\" onClick={() => show_device_data_new(selected_pond,\"daily\")} >\r\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">1D</span>\r\n                        <span className=\"d-block d-sm-none\"><i className=\"tim-icons icon-single-02\" /></span>\r\n                      </Button>\r\n                      {/*___1W___*/}\r\n                      <Button id=\"1\" size=\"sm\" tag=\"label\" className={classNames(\"btn-simple\", {active: chartDataType === \"weekly\",})} onClick={() => show_device_data_new(selected_pond,\"weekly\")} >\r\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">1W</span>\r\n                        <span className=\"d-block d-sm-none\"><i className=\"tim-icons icon-gift-2\"/></span>\r\n                      </Button>\r\n                      {/*__1M__*/}\r\n                      <Button id=\"2\" size=\"sm\" tag=\"label\" className={classNames(\"btn-simple\", {active: chartDataType === \"monthly\",})} onClick={() => show_device_data_new(selected_pond,\"monthly\")}>\r\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">1M</span>\r\n                        <span className=\"d-block d-sm-none\">\r\n                          <i className=\"tim-icons icon-tap-02\" />\r\n                        </span>\r\n                      </Button>\r\n                      {/*__6 MONTHS__ */}\r\n                      <Button id=\"3\" size=\"sm\" tag=\"label\"\r\n                        className={classNames(\"btn-simple\", {\r\n                          active: chartDataType === \"half-yearly\",\r\n                        })}\r\n                        onClick={() => show_device_data_new(selected_pond,\"half-yearly\")}\r\n                      >\r\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                          6M\r\n                        </span>\r\n                        <span className=\"d-block d-sm-none\">\r\n                          <i className=\"tim-icons icon-tap-02\" />\r\n                        </span>\r\n                      </Button>\r\n                      {/*__1 YEAR__ */}\r\n                      <Button\r\n\r\n                        id=\"4\"\r\n                        size=\"sm\"\r\n                        tag=\"label\"\r\n                        className={classNames(\"btn-simple\", {\r\n                          active: chartDataType === \"yearly\",\r\n                        })}\r\n                        onClick={() => show_device_data_new(selected_pond,\"yearly\")}\r\n                      >\r\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                          1Y\r\n                        </span>\r\n                        <span className=\"d-block d-sm-none\">\r\n                          <i className=\"tim-icons icon-tap-02\" />\r\n                        </span>\r\n                      </Button>\r\n                      {/*__5 YEARS__ */}\r\n                      <Button\r\n                        id=\"5\"\r\n                        size=\"sm\"\r\n                        tag=\"label\"\r\n                        className={classNames(\"btn-simple\", {\r\n                          active: chartDataType === \"5-yearly\",\r\n                        })}\r\n                        onClick={() => setBgChartData(\"data6\")}\r\n                        disabled={true}\r\n                      >\r\n                        <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                          5Y\r\n                        </span>\r\n                        <span className=\"d-block d-sm-none\">\r\n                          <i className=\"tim-icons icon-tap-02\" />\r\n                        </span>\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </Col>\r\n                </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <div className=\"chart-area mb-3\">\r\n                  <Line\r\n                    data={selected_pond_wise_graph_data[selectedData.data]}\r\n                    options={selected_pond_wise_graph_data[selectedData.options]}\r\n                  />\r\n                </div>\r\n              </CardBody>\r\n              <div className=\"tab-holder\">\r\n                {/*tab group for showing ph,temp,turb*/}\r\n                <Nav tabs className=\"tab-nav-info\">\r\n                  {/*PH & Temp*/}\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classNames(\"tab-ph\", {\r\n                        active:\r\n                          currentActiveTab === '1'\r\n                      })}\r\n                      onClick={() => { toggle('1'); setSelectedData({data:'ph',options:'ph_options'}) }}\r\n                    >\r\n                      pH\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classNames(\"tab-turbidity\", {\r\n                        active:\r\n                          currentActiveTab === '2'\r\n                      })}\r\n                      onClick={() => { toggle('2'); setSelectedData({data:'temp',options:'temp_options'}) }}\r\n                    >\r\n                      Temp\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  {/*TURBIDITY*/}\r\n                  {/* <NavItem>\r\n                    <NavLink\r\n                      className={classNames(\"tab-turbidity\", {\r\n                        active:\r\n                          currentActiveTab === '2'\r\n                      })}\r\n                      onClick={() => { toggle('2'); }}\r\n                    >\r\n                      Turbidity\r\n                    </NavLink>\r\n                  </NavItem> */}\r\n                  {/*TDS*/}\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classNames(\"tab-tds\", {\r\n                        active:\r\n                          currentActiveTab === '3'\r\n                      })}\r\n                      onClick={() => { toggle('3'); setSelectedData({data:'tds',options:'tds_options'})}}\r\n                    >\r\n                      TDS\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n              </div>\r\n            </Card>\r\n            {/**Show tab conttent */}\r\n            <TabContent activeTab={currentActiveTab}>\r\n              {/**__TAB 1 CONTENT */}\r\n              <TabPane tabId=\"1\">\r\n                <Row>\r\n                  <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"5\">\r\n\r\n                    <Table className=\"leftside-values\" borderless>\r\n                      <tbody>\r\n                        <tr className=\"add-one-border\">\r\n                          <th scope=\"row\" className=\"ph-value-number\">\r\n                            pH 4.0 - 6.0\r\n                          </th>\r\n                          <td className=\"ph-text\">\r\n                            Slow growth rate\r\n                          </td>\r\n                        </tr>\r\n                        {/**2nd row to left */}\r\n                        <tr className=\"add-one-border\">\r\n                          <th scope=\"row\" className=\"ph-value-number\">\r\n                            pH 6.0 - 9.0\r\n                          </th>\r\n                          <td className=\"ph-text good-value-color\">\r\n                            Best for growth\r\n                          </td>\r\n                        </tr>\r\n                        {/**3rd row to left */}\r\n                        <tr className=\"add-one-border\">\r\n                          <th scope=\"row\" className=\"ph-value-number\">\r\n                            pH 9.0 - 11.0\r\n                          </th>\r\n                          <td className=\"ph-text\">\r\n                            Slow growth rate\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </Table>\r\n\r\n                  </Col>\r\n                  {/* <Col sm=\"12\" md=\"6\" lg=\"6\" xl=\"5\">\r\n                    <Table className=\"rightside-values\" borderless>\r\n                      <tbody>\r\n                        <tr>\r\n                          <th scope=\"row\" className=\"ph-value-number\">\r\n                            pH 4.0 - 6.0\r\n                          </th>\r\n                          <td className=\"ph-text\">\r\n                            Slow growth rate\r\n                          </td>\r\n                        </tr>\r\n                        \r\n                        <tr>\r\n                          <th scope=\"row\" className=\"ph-value-number\">\r\n                            pH 6.0 - 9.0\r\n                          </th>\r\n                          <td className=\"good-value-colour\">\r\n                            Best for growth\r\n                          </td>\r\n                        </tr>\r\n                        \r\n                        <tr>\r\n                          <th scope=\"row\" className=\"ph-value-number\">\r\n                            pH 9.0 - 11.0\r\n                          </th>\r\n                          <td className=\"ph-text\">\r\n                            Slow growth rate\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </Table>\r\n                  </Col> */}\r\n                </Row>\r\n              </TabPane>\r\n              {/**__TAB 2 CONTENT */}\r\n              <TabPane tabId=\"2\">\r\n                <Row>\r\n                  <Col sm=\"12\" md=\"6\" lg=\"8\" xl=\"5\">\r\n                    {/* <Table className=\"rightside-values\" borderless>\r\n                      <tbody>\r\n                        <tr>\r\n                          <th scope=\"row\" className=\"ph-value-number\">\r\n                            &lt; 5 NTU\r\n                          </th>\r\n                          <td className=\"ph-text\">\r\n                            Slow growth rate\r\n                          </td>\r\n                        </tr>\r\n                        \r\n                        <tr>\r\n                          <th scope=\"row\" className=\"ph-value-number\">\r\n                            5-10 NTU\r\n                          </th>\r\n                          <td className=\"good-value-colour\">\r\n                            Best for growth\r\n                          </td>\r\n                        </tr>\r\n                        \r\n                        <tr>\r\n                          <th scope=\"row\" className=\"ph-value-number\">\r\n                            &gt; 10 NTU\r\n                          </th>\r\n                          <td className=\"ph-text\">\r\n                            Slow growth rate\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </Table> */}\r\n                  </Col>\r\n                  <Col sm=\"12\" md=\"6\" lg=\"8\" xl=\"7\">\r\n\r\n                  </Col>\r\n                </Row>\r\n              </TabPane>\r\n              {/**__TAB 3 CONTENT */}\r\n              <TabPane tabId=\"3\">\r\n                <Row>\r\n                  <Col sm=\"12\" md=\"6\" lg=\"8\" xl=\"5\">\r\n                    <Table className=\"rightside-values\" borderless>\r\n                      <tbody>\r\n                        <tr>\r\n                          <th scope=\"row\" className=\"ph-value-number\">\r\n                            &lt;100 mg/L\r\n                          </th>\r\n                          <td className=\"ph-text\">\r\n                            Slow growth rate\r\n                          </td>\r\n                        </tr>\r\n                        {/**2nd row to left */}\r\n                        <tr>\r\n                          <th scope=\"row\" className=\"ph-value-number\">\r\n                            160-200 mg/L\r\n                          </th>\r\n                          <td className=\"good-value-colour\">\r\n                            Best for growth\r\n                          </td>\r\n                        </tr>\r\n                        {/**3rd row to left */}\r\n                        <tr>\r\n                          <th scope=\"row\" className=\"ph-value-number\">\r\n                            &gt; 250 mg/L\r\n                          </th>\r\n                          <td className=\"ph-text\">\r\n                            Slow growth rate\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </Table>\r\n                  </Col>\r\n\r\n                </Row>\r\n              </TabPane>\r\n            </TabContent>\r\n          </Col>\r\n          {/* <Col xs=\"12\" sm=\"12\" lg=\"4\" style={{height:'85vh',overflowY:'auto',scrollBehavior: 'smooth'}}>\r\n            <Row>\r\n              {Array.from(selected_pond_wise_graph_data.slice(1,selected_pond_wise_graph_data.length)).map((item,idx)=>(\r\n                <Col xs=\"12\" key={idx}>\r\n                <Card className=\"card-chart small-card-chart\">\r\n                  <CardHeader className=\"pond-name-ellipse\">\r\n                    <h6 className=\"other-pond-name-small\"><img src={SafePondDot} className=\"name-dot\" /><span className=\"pond-show-safe-small\">{pond_device_data[idx+1].device_name}</span></h6>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <div className=\"chart-area\">\r\n                      {is_data_available(pond_device_data[idx+1])?<Line\r\n                        data={item[selectedData.data]}\r\n                        options={item[selectedData.options]}\r\n                      />:<h4 className=\"ml-3\">No Data Available</h4>}\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n              ))}\r\n            </Row>\r\n          </Col> */}\r\n          \r\n          <Col lg=\"12\">\r\n            <div className=\" add-extra-top-margin\">\r\n              <OwlCarousel className='owl-theme' loop {...options}>\r\n                <div className='item'>\r\n                  <video className=\"ccda-video\" controls>\r\n                    <source src=\"https://www.pexels.com/video/water-plants-floating-on-the-surface-of-a-pond-3252151/\" type=\"video/mp4\" />\r\n                  </video>\r\n\r\n                </div>\r\n                {/**REMOVE ONCE DYNMIC__DUMMY DIVS */}\r\n                <div className='item'>\r\n                  <video className=\"ccda-video\" controls>\r\n                    <source src=\"https://www.pexels.com/video/water-plants-floating-on-the-surface-of-a-pond-3252151/\" type=\"video/mp4\" />\r\n                  </video>\r\n\r\n                </div>\r\n                <div className='item'>\r\n                  <video className=\"ccda-video\" controls>\r\n                    <source src=\"https://www.pexels.com/video/water-plants-floating-on-the-surface-of-a-pond-3252151/\" type=\"video/mp4\" />\r\n                  </video>\r\n\r\n                </div>\r\n                <div className='item'>\r\n                  <video className=\"ccda-video\" controls>\r\n                    <source src=\"https://www.pexels.com/video/water-plants-floating-on-the-surface-of-a-pond-3252151/\" type=\"video/mp4\" />\r\n                  </video>\r\n\r\n                </div>\r\n\r\n              </OwlCarousel>\r\n            </div>\r\n          </Col>\r\n        </Row>}\r\n\r\n      </div>\r\n\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","export const is_logged_in = () => {\r\n    if (sessionStorage.getItem('access-token') != null && sessionStorage.getItem('access-token') != undefined) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\nexport const colors=[\r\n    '#FFFF00','#00FF00'\r\n]\r\nexport const generate_graph_data = (data) => {\r\n    console.log('devices length',data.length)\r\n    let result=[]\r\n    Array.from(data).forEach((item, idx) => {\r\n        let temp_data = {\r\n            ph_temp: (canvas) => {\r\n                let ctx = canvas.getContext(\"2d\");\r\n                let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n                gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n                gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n                gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\");\r\n\r\n                return {\r\n                    labels: item.time,\r\n                    datasets: [\r\n                        {\r\n                            label: \"pH\",\r\n                            fill: true,\r\n                            backgroundColor: gradientStroke,\r\n                            borderColor: \"#B21F1F\",\r\n                            borderWidth: 2,\r\n                            borderDash: [],\r\n                            borderDashOffset: 0.0,\r\n                            pointBackgroundColor: \"#B21F1F\",\r\n                            pointBorderColor: \"rgba(255,255,255,0)\",\r\n                            pointHoverBackgroundColor: \"#B21F1F\",\r\n                            pointBorderWidth: 20,\r\n                            pointHoverRadius: 4,\r\n                            pointHoverBorderWidth: 15,\r\n                            pointRadius: 4,\r\n                            data: item.ph,\r\n                        },\r\n                        {\r\n                            label: \"Temp\",\r\n                            fill: true,\r\n                            backgroundColor: gradientStroke,\r\n                            borderColor: \"#F6C81D\",\r\n                            borderWidth: 2,\r\n                            borderDash: [],\r\n                            borderDashOffset: 0.0,\r\n                            pointBackgroundColor: \"#F6C81D\",\r\n                            pointBorderColor: \"rgba(255,255,255,0)\",\r\n                            pointHoverBackgroundColor: \"#F6C81D\",\r\n                            pointBorderWidth: 20,\r\n                            pointHoverRadius: 4,\r\n                            pointHoverBorderWidth: 15,\r\n                            pointRadius: 4,\r\n                            data: item.temp,\r\n                        },\r\n                        // {\r\n                        //     label: \"TDS\",\r\n                        //     fill: true,\r\n                        //     backgroundColor: gradientStroke,\r\n                        //     borderColor: \"#296330\",\r\n                        //     borderWidth: 2,\r\n                        //     borderDash: [],\r\n                        //     borderDashOffset: 0.0,\r\n                        //     pointBackgroundColor: \"#296330\",\r\n                        //     pointBorderColor: \"rgba(255,255,255,0)\",\r\n                        //     pointHoverBackgroundColor: \"#296330\",\r\n                        //     pointBorderWidth: 20,\r\n                        //     pointHoverRadius: 4,\r\n                        //     pointHoverBorderWidth: 15,\r\n                        //     pointRadius: 4,\r\n                        //     data: item.tds,\r\n                        // },\r\n                    ],\r\n                };\r\n            },\r\n            tds:(canvas) =>{\r\n                let ctx = canvas.getContext(\"2d\");\r\n                let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n                gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n                gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n                gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\");\r\n                return {\r\n                    labels: item.time,\r\n                    datasets: [\r\n                        {\r\n                            label: \"TDS\",\r\n                            fill: true,\r\n                            backgroundColor: gradientStroke,\r\n                            borderColor: \"#F6C81D\",\r\n                            borderWidth: 2,\r\n                            borderDash: [],\r\n                            borderDashOffset: 0.0,\r\n                            pointBackgroundColor: \"#F6C81D\",\r\n                            pointBorderColor: \"rgba(255,255,255,0)\",\r\n                            pointHoverBackgroundColor: \"#F6C81D\",\r\n                            pointBorderWidth: 20,\r\n                            pointHoverRadius: 4,\r\n                            pointHoverBorderWidth: 15,\r\n                            pointRadius: 4,\r\n                            data: item.tds,\r\n                        },\r\n                    ],\r\n                };\r\n            },\r\n            ph_temp_options: {\r\n                maintainAspectRatio: false,\r\n                legend: {\r\n                    display: false,\r\n                },\r\n                tooltips: {\r\n                    backgroundColor: \"#f5f5f5\",\r\n                    titleFontColor: \"#333\",\r\n                    bodyFontColor: \"#666\",\r\n                    bodySpacing: 4,\r\n                    xPadding: 12,\r\n                    mode: \"nearest\",\r\n                    intersect: 0,\r\n                    position: \"nearest\",\r\n                },\r\n                responsive: true,\r\n                scales: {\r\n                    yAxes: [\r\n                        {\r\n\r\n                            barPercentage: 1.6,\r\n                            gridLines: {\r\n                                drawBorder: false,\r\n                                color: \"rgba(29,140,248,0.0)\",\r\n                                zeroLineColor: \"transparent\",\r\n                            },\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: 'pH & Temp'\r\n                            },\r\n                            ticks: {\r\n                                suggestedMin: 0,\r\n                                suggestedMax: 100,\r\n                                padding: 20,\r\n                                fontColor: \"#9a9a9a\",\r\n                            },\r\n\r\n                        },\r\n                    ],\r\n                    xAxes: [\r\n                        {\r\n                            barPercentage: 1.6,\r\n                            gridLines: {\r\n                                drawBorder: false,\r\n                                color: \"rgba(29,140,248,0.1)\",\r\n                                zeroLineColor: \"transparent\",\r\n                            },\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: 'Time'\r\n                            },\r\n                            ticks: {\r\n                                padding: 20,\r\n                                fontColor: \"#9a9a9a\",\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n            },\r\n            tds_options: {\r\n                maintainAspectRatio: false,\r\n                legend: {\r\n                    display: false,\r\n                },\r\n                tooltips: {\r\n                    backgroundColor: \"#f5f5f5\",\r\n                    titleFontColor: \"#333\",\r\n                    bodyFontColor: \"#666\",\r\n                    bodySpacing: 4,\r\n                    xPadding: 12,\r\n                    mode: \"nearest\",\r\n                    intersect: 0,\r\n                    position: \"nearest\",\r\n                },\r\n                responsive: true,\r\n                scales: {\r\n                    yAxes: [\r\n                        {\r\n                            barPercentage: 1.6,\r\n                            gridLines: {\r\n                                drawBorder: false,\r\n                                color: \"rgba(29,140,248,0.0)\",\r\n                                zeroLineColor: \"transparent\",\r\n                            },\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: 'TDS'\r\n                            },\r\n                            ticks: {\r\n                                suggestedMin: 0,\r\n                                suggestedMax: 100,\r\n                                padding: 20,\r\n                                fontColor: \"#9a9a9a\",\r\n                            },\r\n\r\n                        },\r\n                    ],\r\n                    xAxes: [\r\n                        {\r\n                            barPercentage: 1.6,\r\n                            gridLines: {\r\n                                drawBorder: false,\r\n                                color: \"rgba(29,140,248,0.1)\",\r\n                                zeroLineColor: \"transparent\",\r\n                            },\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: 'Time'\r\n                            },\r\n                            ticks: {\r\n                                padding: 20,\r\n                                fontColor: \"#9a9a9a\",\r\n                            },\r\n                        },\r\n                    ],\r\n                },\r\n            },\r\n        };\r\n        result.push(temp_data)\r\n    })\r\n    console.log(result)\r\n    return result\r\n}\r\n\r\nexport const generate_graph_data_new = (data) => {\r\n    console.log('data',data)\r\n    var ph_labels=[]\r\n    var ph_datasets=[]\r\n    var temp_labels=[]\r\n    var temp_datasets=[]\r\n    var tds_labels=[]\r\n    var tds_datasets=[]\r\n    let result={}\r\n    for (const property in data) {\r\n        // console.log(`${property}: ${data[property]}`);\r\n        if(property == 'PH'){\r\n            ph_labels=data[property][0]?.time\r\n            Array.from(data[property]).forEach((element,idx) => {\r\n                // console.log('okk',property,element.device_name)\r\n                ph_datasets.push({\r\n                    label: element.device_name,\r\n                    fill: true,\r\n                    // backgroundColor: gradientStroke,\r\n                    borderColor: \"#F6C81D\",\r\n                    borderWidth: 2,\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    pointBackgroundColor: \"#F6C81D\",\r\n                    pointBorderColor: \"rgba(255,255,255,0)\",\r\n                    pointHoverBackgroundColor: \"#F6C81D\",\r\n                    pointBorderWidth: 20,\r\n                    pointHoverRadius: 4,\r\n                    pointHoverBorderWidth: 15,\r\n                    pointRadius: 4,\r\n                    data: element.ph,\r\n                })\r\n            });\r\n        }\r\n        else if(property=='TEMP'){\r\n            temp_labels=data[property][0]?.time\r\n            Array.from(data[property]).forEach((element,idx) => {\r\n                console.log('okk',property,element.device_name)\r\n                temp_datasets.push({\r\n                    label: element.device_name,\r\n                    fill: true,\r\n                    // backgroundColor: gradientStroke,\r\n                    borderColor: \"#F6C81D\",\r\n                    borderWidth: 2,\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    pointBackgroundColor: \"#F6C81D\",\r\n                    pointBorderColor: \"rgba(255,255,255,0)\",\r\n                    pointHoverBackgroundColor: \"#F6C81D\",\r\n                    pointBorderWidth: 20,\r\n                    pointHoverRadius: 4,\r\n                    pointHoverBorderWidth: 15,\r\n                    pointRadius: 4,\r\n                    data: element.temp,\r\n                })\r\n            });\r\n        }\r\n        else if(property=='TDS'){\r\n            tds_labels=data[property][0]?.time\r\n            Array.from(data[property]).forEach((element,idx) => {\r\n                tds_datasets.push({\r\n                    label: element.device_name,\r\n                    fill: true,\r\n                    // backgroundColor: gradientStroke,\r\n                    borderColor: \"#F6C81D\",\r\n                    borderWidth: 2,\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    pointBackgroundColor: \"#F6C81D\",\r\n                    pointBorderColor: \"rgba(255,255,255,0)\",\r\n                    pointHoverBackgroundColor: \"#F6C81D\",\r\n                    pointBorderWidth: 20,\r\n                    pointHoverRadius: 4,\r\n                    pointHoverBorderWidth: 15,\r\n                    pointRadius: 4,\r\n                    data: element.tds,\r\n                })\r\n            });\r\n        }\r\n    }\r\n    let temp_data = {\r\n        ph: (canvas) => {\r\n            let ctx = canvas.getContext(\"2d\");\r\n            let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n            gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n            gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n            gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\");\r\n\r\n            return {\r\n                labels: ph_labels,\r\n                datasets: ph_datasets,\r\n            };\r\n        },\r\n        temp: (canvas) => {\r\n            let ctx = canvas.getContext(\"2d\");\r\n            let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n            gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n            gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n            gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\");\r\n\r\n            return {\r\n                labels: temp_labels,\r\n                datasets: temp_datasets,\r\n            };\r\n        },\r\n        tds:(canvas) =>{\r\n            let ctx = canvas.getContext(\"2d\");\r\n            let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n            gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n            gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n            gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\");\r\n            return {\r\n                labels: tds_labels,\r\n                datasets: tds_datasets,\r\n            };\r\n        },\r\n        ph_options: {\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                display: false,\r\n            },\r\n            tooltips: {\r\n                backgroundColor: \"#f5f5f5\",\r\n                titleFontColor: \"#333\",\r\n                bodyFontColor: \"#666\",\r\n                bodySpacing: 4,\r\n                xPadding: 12,\r\n                mode: \"nearest\",\r\n                intersect: 0,\r\n                position: \"nearest\",\r\n            },\r\n            responsive: true,\r\n            scales: {\r\n                yAxes: [\r\n                    {\r\n                        barPercentage: 1.6,\r\n                        gridLines: {\r\n                            drawBorder: false,\r\n                            color: \"rgba(29,140,248,0.0)\",\r\n                            zeroLineColor: \"transparent\",\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'pH'\r\n                        },\r\n                        ticks: {\r\n                            suggestedMin: 0,\r\n                            suggestedMax: 100,\r\n                            padding: 20,\r\n                            fontColor: \"#9a9a9a\",\r\n                        },\r\n\r\n                    },\r\n                ],\r\n                xAxes: [\r\n                    {\r\n                        barPercentage: 1.6,\r\n                        gridLines: {\r\n                            drawBorder: false,\r\n                            color: \"rgba(29,140,248,0.1)\",\r\n                            zeroLineColor: \"transparent\",\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Time'\r\n                        },\r\n                        ticks: {\r\n                            padding: 20,\r\n                            fontColor: \"#9a9a9a\",\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        },\r\n        temp_options: {\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                display: false,\r\n            },\r\n            tooltips: {\r\n                backgroundColor: \"#f5f5f5\",\r\n                titleFontColor: \"#333\",\r\n                bodyFontColor: \"#666\",\r\n                bodySpacing: 4,\r\n                xPadding: 12,\r\n                mode: \"nearest\",\r\n                intersect: 0,\r\n                position: \"nearest\",\r\n            },\r\n            responsive: true,\r\n            scales: {\r\n                yAxes: [\r\n                    {\r\n                        barPercentage: 1.6,\r\n                        gridLines: {\r\n                            drawBorder: false,\r\n                            color: \"rgba(29,140,248,0.0)\",\r\n                            zeroLineColor: \"transparent\",\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Temp'\r\n                        },\r\n                        ticks: {\r\n                            suggestedMin: 0,\r\n                            suggestedMax: 100,\r\n                            padding: 20,\r\n                            fontColor: \"#9a9a9a\",\r\n                        },\r\n\r\n                    },\r\n                ],\r\n                xAxes: [\r\n                    {\r\n                        barPercentage: 1.6,\r\n                        gridLines: {\r\n                            drawBorder: false,\r\n                            color: \"rgba(29,140,248,0.1)\",\r\n                            zeroLineColor: \"transparent\",\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Time'\r\n                        },\r\n                        ticks: {\r\n                            padding: 20,\r\n                            fontColor: \"#9a9a9a\",\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        },\r\n        tds_options: {\r\n            maintainAspectRatio: false,\r\n            legend: {\r\n                display: false,\r\n            },\r\n            tooltips: {\r\n                backgroundColor: \"#f5f5f5\",\r\n                titleFontColor: \"#333\",\r\n                bodyFontColor: \"#666\",\r\n                bodySpacing: 4,\r\n                xPadding: 12,\r\n                mode: \"nearest\",\r\n                intersect: 0,\r\n                position: \"nearest\",\r\n            },\r\n            responsive: true,\r\n            scales: {\r\n                yAxes: [\r\n                    {\r\n                        barPercentage: 1.6,\r\n                        gridLines: {\r\n                            drawBorder: false,\r\n                            color: \"rgba(29,140,248,0.0)\",\r\n                            zeroLineColor: \"transparent\",\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'TDS'\r\n                        },\r\n                        ticks: {\r\n                            suggestedMin: 0,\r\n                            suggestedMax: 100,\r\n                            padding: 20,\r\n                            fontColor: \"#9a9a9a\",\r\n                        },\r\n\r\n                    },\r\n                ],\r\n                xAxes: [\r\n                    {\r\n                        barPercentage: 1.6,\r\n                        gridLines: {\r\n                            drawBorder: false,\r\n                            color: \"rgba(29,140,248,0.1)\",\r\n                            zeroLineColor: \"transparent\",\r\n                        },\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: 'Time'\r\n                        },\r\n                        ticks: {\r\n                            padding: 20,\r\n                            fontColor: \"#9a9a9a\",\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        },  \r\n    };\r\n    result=temp_data\r\n    console.log(result)\r\n    return result\r\n}","import React from 'react'\r\nconst Mailto = ({ email, subject, body, children }) => {\r\n    return (\r\n        <>\r\n        <a href={`mailto:${email}?subject=${encodeURIComponent(subject) || ''}&body=${encodeURIComponent(body) || ''}`}>{email}</a>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Mailto","import React, { useEffect, useRef, useState } from \"react\";\r\nimport UpArrow from \"../assets/icons/up-arrow.svg\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// react plugin used to create charts\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport SearchField from 'react-search-field';\r\nimport SafePondDot from '../assets/icons/safe-pond.svg'\r\nimport PaperIcon from '../assets/icons/Paper.svg'\r\nimport RefreshIcon from '../assets/icons/refresh.svg'\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Nav,\r\n  NavLink,\r\n  ButtonToolbar,\r\n  Table,\r\n  ButtonToggle,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n  Col,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n\r\n} from \"reactstrap\";\r\n\r\n// core components\r\nimport {\r\n  chartExample1,\r\n  chartExample2,\r\n\r\n  chartExample4,\r\n} from \"variables/charts.js\";\r\n// import \"../../src/assets/css/Users.css\";\r\nimport '../index.css'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport { API } from \"config\";\r\nimport { generate_graph_data } from \"helper\";\r\nimport { useLocation } from 'react-router';\r\nimport { useSnackbar } from 'notistack';\r\nimport store from \"store/store\";\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { fetchUsersData } from \"store/slices/userSlice\";\r\nimport Mailto from \"components/MailTo/MailTo\";\r\n\r\nfunction Users(props) {\r\n  const animatedComponents = makeAnimated();\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\r\n  let location = useLocation()\r\n  const dispatch = useDispatch()\r\n  const [showAssetUpdateModal,setShowAssetUpdateModal] = useState(false)\r\n  const closeForm=()=>{\r\n      setShowAssetUpdateModal(false)\r\n      setSelectedUser(null)\r\n  }\r\n  const users = useSelector(state => state.users.data)\r\n  \r\n  // const device_data_ref = React.forwardRef(null)\r\n  {/**Code for writing table search */ }\r\n  function onChange(value, event) {\r\n    console.log(value,event)\r\n  }\r\n  const [selected_user,setSelectedUser]=useState()\r\n  \r\n  useEffect(()=>{\r\n    // console.log(device_data_ref.current)\r\n    console.log('users mounted')\r\n  },[])\r\n  const [message,setMessage]=useState()\r\n  const [assets,setAssets]=useState()\r\n  const [selectedAssets,setSelectedAssets]=useState('')\r\n  const get_free_assets=()=>{\r\n    API.get('assets/list/').then((res)=>{\r\n      console.log('all assets',res.data)\r\n      let temp=[]\r\n      res.data.data.forEach((asset,idx)=>{\r\n        temp.push({value:asset.id,label:asset.ast_name,data:asset})\r\n      })\r\n      setAssets(temp)\r\n    }).catch(err=>{\r\n      console.log(err.response.data)\r\n    })\r\n  }\r\n  \r\n  const handleAssetsChange=(options,actionMeta)=>{\r\n    let temp ='';\r\n    options.forEach((option,idx)=>{\r\n      if(idx < options.length-1){\r\n        temp+=option.value+','\r\n      }\r\n      else{\r\n        temp+=option.value\r\n      }\r\n    })\r\n    setSelectedAssets(temp)\r\n  }\r\n  const assign_asset_to_user=()=>{\r\n    API.post('assets/assign/to/user/',{user_id:selected_user.id,asset_ids:selectedAssets}).then((res)=>{\r\n      setSelectedAssets('')\r\n      closeForm()\r\n      get_free_assets()\r\n      dispatch(fetchUsersData())\r\n      enqueueSnackbar('Assets assigned to user',{variant:'success'})\r\n    })\r\n  }\r\n  const swap_user_verification_status=(user_id)=>{\r\n    API.post('auth/user/active/inactive/',{user_id:user_id}).then(res=>{\r\n      console.log(res.data)\r\n      dispatch(fetchUsersData())\r\n      enqueueSnackbar('User activation status updated',{variant:'success'})\r\n    }).catch(err=>{\r\n      enqueueSnackbar('Something went wrong, Please try again later',{variant:'warning'})\r\n    })\r\n  }\r\n  React.useEffect(()=>{\r\n    get_free_assets()\r\n  },[])\r\n  return (\r\n    <>\r\n    <Modal\r\n        isOpen={showAssetUpdateModal}\r\n        size='md'\r\n        className=\"p-2\"\r\n      >\r\n        <ModalHeader className=\"custom-modal-header\">\r\n          <span style={{color:'white'}}>Assign ponds to {selected_user?.first_name}</span>\r\n        </ModalHeader>\r\n        <ModalBody className=\"custom-modal-design\" >\r\n          <Form>\r\n            {/* <FormGroup>\r\n              <Input value={message} onChange={(e)=>setMessage(e.target.value)} type=\"textarea\" className=\"modal-custom-input\" placeholder=\"Type here...\" />\r\n            </FormGroup> */}\r\n            <FormGroup>\r\n              <Select onChange={handleAssetsChange} components={animatedComponents} closeMenuOnSelect={false} isMulti options={assets}/>\r\n            </FormGroup>\r\n          </Form>\r\n          <div className=\"moadl-button-holder\">\r\n            <Button type=\"button\" onClick={assign_asset_to_user} className=\"okay-button-modal\">\r\n              Save\r\n            </Button>\r\n            <Button className=\"cancel-button-modal ml-2\"\r\n              onClick={() => closeForm()}\r\n            >\r\n              cancel\r\n            </Button>\r\n          </div>\r\n        </ModalBody>\r\n        {/* <ModalFooter className=\"p-2\">\r\n          \r\n        </ModalFooter> */}\r\n      </Modal>\r\n\r\n      {/**modal ends */}\r\n      <div className=\"content\">\r\n        <Row>\r\n          {/*______CARD FOR VIEWING DATA IN TABLE______ */}\r\n          <Col lg=\"12\" md=\"12\">\r\n            <Card className=\"table-holder-class\">\r\n\r\n              <CardHeader>\r\n                {/* <CardTitle tag=\"h4\">Simple Table</CardTitle> */}\r\n              </CardHeader>\r\n              <CardBody>\r\n                {/**SERACH FIELD */}\r\n                <SearchField\r\n                  className=\"table-search\"\r\n                  placeholder='Search by Pond ID/Owner Name'\r\n                  onChange={onChange}\r\n                />\r\n                <Table className=\"tablesorter pond-details\" responsive hover>\r\n                  <thead className=\"text-primary\">\r\n                    <tr>\r\n                      <th className=\"pond-value-pointer\">User ID</th>\r\n                      <th className=\"pond-value-pointer\">Name</th>\r\n                      <th className=\"pond-value-pointer\">Email</th>\r\n                      <th className=\"pond-value-pointer\">Phone</th>\r\n                      <th className=\"pond-value-pointer\">Status</th>\r\n                      {/* <th className=\"text-center pond-value-pointer\">Action</th> */}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {users.length>0 && Array.from(users).map((user, idx) => (\r\n                      <tr key={idx}>\r\n                        <td className=\"pond-actual-value\">{idx+1}</td>\r\n                        <td className=\"pond-actual-value\">{user.first_name+' '+user.last_name}</td>\r\n                        <td className=\"pond-actual-value\"><Mailto email={user.usr_email}/></td>\r\n                        <td className=\"pond-actual-value\">{user.user_phone!=null?user.user_phone.phn_cell:''}</td>\r\n                        <td className={`pond-actual-value ${user.is_active ? \"status-text-active\" : \"status-text-inactive\"}`}>{user.is_active?'Active':'Inactive'}</td>\r\n                        {/* <td className=\"text-center pond-actual-value\">{user.ph}</td>\r\n                        <td className=\"text-center pond-actual-value\">{user.temp} ℃</td>\r\n                        <td className=\"text-center pond-actual-value\">{user.tds} mg/L</td>\r\n                        <td className=\"text-center pond-actual-value\">comment</td> */}\r\n                        {/* <th className=\"text-center pond-actual-value ml-auto\">\r\n                        <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                          <ButtonGroup aria-label=\"Third group\" className=\"m-auto\" size=\"sm\">\r\n                            <Button onClick={()=>{setSelectedUser(user);setShowAssetUpdateModal(true)}}>Manage Ponds</Button>\r\n                          </ButtonGroup>\r\n                        </ButtonToolbar>\r\n                        </th> */}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardText,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nfunction UserProfile() {\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col md=\"8\">\r\n            <Card>\r\n              <CardHeader>\r\n                <h5 className=\"title\">Edit Profile</h5>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form>\r\n                  <Row>\r\n                    <Col className=\"pr-md-1\" md=\"5\">\r\n                      <FormGroup>\r\n                        <label>Company (disabled)</label>\r\n                        <Input\r\n                          defaultValue=\"Creative Code Inc.\"\r\n                          disabled\r\n                          placeholder=\"Company\"\r\n                          type=\"text\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col className=\"px-md-1\" md=\"3\">\r\n                      <FormGroup>\r\n                        <label>Username</label>\r\n                        <Input\r\n                          defaultValue=\"michael23\"\r\n                          placeholder=\"Username\"\r\n                          type=\"text\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col className=\"pl-md-1\" md=\"4\">\r\n                      <FormGroup>\r\n                        <label htmlFor=\"exampleInputEmail1\">\r\n                          Email address\r\n                        </label>\r\n                        <Input placeholder=\"mike@email.com\" type=\"email\" />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\"pr-md-1\" md=\"6\">\r\n                      <FormGroup>\r\n                        <label>First Name</label>\r\n                        <Input\r\n                          defaultValue=\"Mike\"\r\n                          placeholder=\"Company\"\r\n                          type=\"text\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col className=\"pl-md-1\" md=\"6\">\r\n                      <FormGroup>\r\n                        <label>Last Name</label>\r\n                        <Input\r\n                          defaultValue=\"Andrew\"\r\n                          placeholder=\"Last Name\"\r\n                          type=\"text\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Address</label>\r\n                        <Input\r\n                          defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\r\n                          placeholder=\"Home Address\"\r\n                          type=\"text\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\"pr-md-1\" md=\"4\">\r\n                      <FormGroup>\r\n                        <label>City</label>\r\n                        <Input\r\n                          defaultValue=\"Mike\"\r\n                          placeholder=\"City\"\r\n                          type=\"text\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col className=\"px-md-1\" md=\"4\">\r\n                      <FormGroup>\r\n                        <label>Country</label>\r\n                        <Input\r\n                          defaultValue=\"Andrew\"\r\n                          placeholder=\"Country\"\r\n                          type=\"text\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col className=\"pl-md-1\" md=\"4\">\r\n                      <FormGroup>\r\n                        <label>Postal Code</label>\r\n                        <Input placeholder=\"ZIP Code\" type=\"number\" />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"8\">\r\n                      <FormGroup>\r\n                        <label>About Me</label>\r\n                        <Input\r\n                          cols=\"80\"\r\n                          defaultValue=\"Lamborghini Mercy, Your chick she so thirsty, I'm in\r\n                            that two seat Lambo.\"\r\n                          placeholder=\"Here can be your description\"\r\n                          rows=\"4\"\r\n                          type=\"textarea\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\r\n                  Save\r\n                </Button>\r\n              </CardFooter>\r\n            </Card>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <Card className=\"card-user\">\r\n              <CardBody>\r\n                <CardText />\r\n                <div className=\"author\">\r\n                  <div className=\"block block-one\" />\r\n                  <div className=\"block block-two\" />\r\n                  <div className=\"block block-three\" />\r\n                  <div className=\"block block-four\" />\r\n                  <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                    <img\r\n                      alt=\"...\"\r\n                      className=\"avatar\"\r\n                      src={require(\"assets/img/emilyz.jpg\").default}\r\n                    />\r\n                    <h5 className=\"title\">Mike Andrew</h5>\r\n                  </a>\r\n                  <p className=\"description\">Ceo/Co-Founder</p>\r\n                </div>\r\n                <div className=\"card-description\">\r\n                  Do not be scared of the truth because we need to restart the\r\n                  human foundation in truth And I love you like Kanye loves\r\n                  Kanye I love Rick Owens’ bed design but the back is...\r\n                </div>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <div className=\"button-container\">\r\n                  <Button className=\"btn-icon btn-round\" color=\"facebook\">\r\n                    <i className=\"fab fa-facebook\" />\r\n                  </Button>\r\n                  <Button className=\"btn-icon btn-round\" color=\"twitter\">\r\n                    <i className=\"fab fa-twitter\" />\r\n                  </Button>\r\n                  <Button className=\"btn-icon btn-round\" color=\"google\">\r\n                    <i className=\"fab fa-google-plus\" />\r\n                  </Button>\r\n                </div>\r\n              </CardFooter>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","\r\nimport React from \"react\";\r\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport logo from \"assets/img/ccda-logo.svg\";\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\nimport { is_logged_in } from \"helper\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPondsData } from \"store/slices/pondsSlice\";\r\nimport { USER_ID } from \"config\";\r\nimport { fetchUserDetailsThunk } from \"store/slices/authSlice\";\r\nimport { fetchUsersData } from \"store/slices/userSlice\";\r\n\r\nvar ps;\r\n\r\nfunction Admin(props) {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch()\r\n  let history = useHistory()\r\n  const mainPanelRef = React.useRef(null);\r\n  const [sidebarOpened, setsidebarOpened] = React.useState(\r\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n  );\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      document.documentElement.className += \" perfect-scrollbar-on\";\r\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n      ps = new PerfectScrollbar(mainPanelRef.current, {\r\n        suppressScrollX: true,\r\n      });\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\r\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\r\n      }\r\n    };\r\n  });\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    if (mainPanelRef.current) {\r\n      mainPanelRef.current.scrollTop = 0;\r\n    }\r\n  }, [location]);\r\n  React.useEffect(()=>{\r\n    if(is_logged_in() == false){\r\n      history.push('/login')\r\n    }\r\n    else{\r\n      dispatch(fetchUserDetailsThunk(sessionStorage.getItem(USER_ID)))\r\n      dispatch(fetchPondsData({user_id:sessionStorage.getItem(USER_ID)}))\r\n      dispatch(fetchUsersData())\r\n    }\r\n  },[])\r\n  // this function opens and closes the sidebar on small devices\r\n  const toggleSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    setsidebarOpened(!sidebarOpened);\r\n  };\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      return (\r\n        <Route\r\n          path={prop.layout + prop.path}\r\n          component={prop.component}\r\n          key={key}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  const getBrandText = (path) => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  \r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color, changeColor }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper\">\r\n            <Sidebar\r\n              routes={routes}\r\n              logo={{\r\n                outterLink: \"#\",\r\n                text: \"CCDA\",\r\n                imgSrc: logo,\r\n              }}\r\n              toggleSidebar={toggleSidebar}\r\n            />\r\n            <div className=\"main-panel\" ref={mainPanelRef} data={color}>\r\n              <AdminNavbar\r\n                brandText={getBrandText(location.pathname)}\r\n                toggleSidebar={toggleSidebar}\r\n                sidebarOpened={sidebarOpened}\r\n              />\r\n              \r\n              <Switch>\r\n                {getRoutes(routes)}\r\n                {/* <Redirect from=\"*\" to=\"/admin/dashboard\" /> */}\r\n              </Switch>\r\n              {\r\n                // we don't want the Footer to be rendered on map page\r\n                location.pathname === \"/admin/maps\" ? null : <Footer fluid />\r\n              }\r\n            </div>\r\n          </div>\r\n          {/* <FixedPlugin bgColor={color} handleBgClick={changeColor} /> */}\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import Dashboard from \"views/Dashboard.js\";\r\nimport Users from \"views/Users.js\";\r\n// import Icons from \"views/Icons.js\";\r\n// import Map from \"views/Map.js\";\r\n// import Notifications from \"views/Notifications.js\";\r\n// import Rtl from \"views/Rtl.js\";\r\n// import TableList from \"views/TableList.js\";\r\n// import Typography from \"views/Typography.js\";\r\nimport UserProfile from \"views/UserProfile.js\";\r\n\r\nvar routes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon:\"tim-icons icon-chart-pie-36\",\r\n    component: Dashboard,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/users\",\r\n    name: \"Users\",\r\n    icon:\"tim-icons icon-single-02\",\r\n    component: Users,\r\n    layout: \"/admin\",\r\n  },\r\n  // {\r\n  //   path: \"/icons\",\r\n  //   name: \"Icons\",\r\n  //   rtlName: \"الرموز\",\r\n  //   icon: \"tim-icons icon-atom\",\r\n  //   component: Icons,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/map\",\r\n  //   name: \"Map\",\r\n  //   rtlName: \"خرائط\",\r\n  //   icon: \"tim-icons icon-pin\",\r\n  //   component: Map,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/notifications\",\r\n  //   name: \"Notifications\",\r\n  //   rtlName: \"إخطارات\",\r\n  //   icon: \"tim-icons icon-bell-55\",\r\n  //   component: Notifications,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/user-profile\",\r\n  //   name: \"User Profile\",\r\n  //   rtlName: \"ملف تعريفي للمستخدم\",\r\n  //   icon: \"tim-icons icon-single-02\",\r\n  //   component: UserProfile,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/tables\",\r\n  //   name: \"Table List\",\r\n  //   rtlName: \"قائمة الجدول\",\r\n  //   icon: \"tim-icons icon-puzzle-10\",\r\n  //   component: TableList,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/typography\",\r\n  //   name: \"Typography\",\r\n  //   rtlName: \"طباعة\",\r\n  //   icon: \"tim-icons icon-align-center\",\r\n  //   component: Typography,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/rtl-support\",\r\n  //   name: \"RTL Support\",\r\n  //   rtlName: \"ار تي ال\",\r\n  //   icon: \"tim-icons icon-world\",\r\n  //   component: Rtl,\r\n  //   layout: \"/rtl\",\r\n  // },\r\n];\r\nexport default routes;\r\n","export default __webpack_public_path__ + \"static/media/ccda-logo.c9d3a78e.svg\";","export default __webpack_public_path__ + \"static/media/react-logo.561f1671.png\";","import React from \"react\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// core components\r\nimport RTLNavbar from \"components/Navbars/RTLNavbar.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport logo from \"assets/img/react-logo.png\";\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\n\r\nvar ps;\r\n\r\nfunction RTL(props) {\r\n  const location = useLocation();\r\n  const mainPanelRef = React.useRef(null);\r\n  const [sidebarOpened, setsidebarOpened] = React.useState(\r\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n  );\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      document.documentElement.className += \" perfect-scrollbar-on\";\r\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n      ps = new PerfectScrollbar(mainPanelRef.current, {\r\n        suppressScrollX: true,\r\n      });\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    // on this page, we need on the body tag the classes .rtl and .menu-on-right\r\n    document.body.classList.add(\"rtl\", \"menu-on-right\");\r\n    // we also need the rtl bootstrap\r\n    // so we add it dynamically to the head\r\n    let head = document.head;\r\n    let link = document.createElement(\"link\");\r\n    link.type = \"text/css\";\r\n    link.rel = \"stylesheet\";\r\n    link.id = \"rtl-id\";\r\n    link.href =\r\n      \"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-rtl/3.4.0/css/bootstrap-rtl.css\";\r\n    head.appendChild(link);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\r\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\r\n      }\r\n      // when we exit this page, we need to delete the classes .rtl and .menu-on-right\r\n      // from the body tag\r\n      document.body.classList.remove(\"rtl\", \"menu-on-right\");\r\n      // we also need to delete the rtl bootstrap, so it does not break the other pages\r\n      // that do not make use of rtl\r\n      document.getElementById(\"rtl-id\").remove();\r\n    };\r\n  });\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    if (mainPanelRef.current) {\r\n      mainPanelRef.current.scrollTop = 0;\r\n    }\r\n  }, [location]);\r\n  // this function opens and closes the sidebar on small devices\r\n  const toggleSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    setsidebarOpened(!sidebarOpened);\r\n  };\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/rtl\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  const getBrandText = (path) => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  return (\r\n    <>\r\n      <BackgroundColorContext.Consumer>\r\n        {({ color, changeColor }) => (\r\n          <React.Fragment>\r\n            <div className=\"wrapper\">\r\n              <Sidebar\r\n                routes={routes}\r\n                rtlActive\r\n                logo={{\r\n                  outterLink: \"#\",\r\n                  text: \"الإبداعية تيم\",\r\n                  imgSrc: logo,\r\n                }}\r\n                toggleSidebar={toggleSidebar}\r\n              />\r\n              <div className=\"main-panel\" ref={mainPanelRef} data={color}>\r\n                <RTLNavbar\r\n                  brandText={getBrandText(location.pathname)}\r\n                  toggleSidebar={toggleSidebar}\r\n                  sidebarOpened={sidebarOpened}\r\n                />\r\n                <Switch>{getRoutes(routes)}</Switch>\r\n                {\r\n                  // we don't want the Footer to be rendered on map page\r\n                  location.pathname === \"/admin/maps\" ? null : <Footer fluid />\r\n                }\r\n              </div>\r\n            </div>\r\n            <FixedPlugin bgColor={color} handleBgClick={changeColor} />\r\n          </React.Fragment>\r\n        )}\r\n      </BackgroundColorContext.Consumer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RTL;\r\n","export default __webpack_public_path__ + \"static/media/pass-show.a14c1d22.svg\";","export default __webpack_public_path__ + \"static/media/hide-pass.a9a908cf.svg\";","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\n// reactstrap components\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n    Button,\r\n    Label,\r\n    FormGroup,\r\n    Input,\r\n    Table,\r\n    Row,\r\n    Col, Form, FormText, FormFeedback,\r\n} from \"reactstrap\";\r\nimport './Login.css';\r\nimport showPwdImg from '../../assets/icons/pass-show.svg';\r\nimport hidePwdImg from '../../assets/icons/hide-pass.svg';\r\nimport { TOKEN } from 'config';\r\nimport { PUBLIC_API } from 'config';\r\nimport { USER_ID } from 'config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchUserDetailsThunk } from 'store/slices/authSlice';\r\nimport { useSnackbar } from \"notistack\";\r\nimport { LinearProgress } from \"@mui/material\";\r\n\r\nconst Login = () => {\r\n    const [isRevealPwd, setIsRevealPwd] = useState(false);\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState()\r\n    const [password, setPassword] = useState()\r\n    const [submitted,setSubmitted]=useState(false)\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar()\r\n    const login = () => {\r\n        setSubmitted(true)\r\n        console.log({usr_email:email,password:password})\r\n        PUBLIC_API.post('auth/login/',{usr_email:email,password:password}).then((res)=>{\r\n            setSubmitted(false)\r\n            console.log(res)\r\n            sessionStorage.setItem(TOKEN,res.data.token)\r\n            sessionStorage.setItem(USER_ID,res.data.user_data.id)\r\n            history.push({pathname:'/admin/dashboard',state:{from:'login'}})\r\n        }).catch(err=>{\r\n            setSubmitted(false)\r\n            console.log(err.response.data)\r\n            if(err?.response?.data?.message){\r\n                enqueueSnackbar(err.response.data.message,{variant:\"warning\"})\r\n            }\r\n        })\r\n    }\r\n    const handleKeyPress = (event) => {\r\n        if(event.key === 'Enter'){\r\n          login()\r\n        }\r\n      }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <Row className=\"add-padding\">\r\n                    <div className=\"col-lg-5 col-sm-12\">\r\n                        <div className=\"add-padding\">\r\n                            <h2 className='login-header'>Sign in</h2>\r\n                            <Form className=\"form-signin\">\r\n                                <FormGroup>\r\n                                    <Label className=\"form-input-1-label\">Username</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"email\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"example@example.com\"\r\n                                        // valid={this.state.validate.emailState === \"has-success\"}\r\n                                        // invalid={this.state.validate.emailState === \"has-danger\"}\r\n                                        value={email || ''}\r\n                                        className=\"form-input-1-field\"\r\n                                        onChange={(e) => \r\n                                            setEmail(e.target.value)\r\n                                        }\r\n                                    />\r\n                                    <FormFeedback>\r\n                                        Uh oh!Looks like there is an issue with your email/username.Please input\r\n                                        a correct one.\r\n                                    </FormFeedback>\r\n                                    <FormFeedback valid>\r\n                                        That's a tasty looking email you've got there.\r\n                                    </FormFeedback>\r\n                                    <FormText>Your username is most likely your email or username.</FormText>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"examplePassword\" className=\"form-input-1-label\" >Password</Label>\r\n                                    <div className=\"password-container\">\r\n                                        <Input\r\n                                            type={isRevealPwd ? \"text\" : \"password\"}\r\n                                            name=\"password\"\r\n                                            id=\"examplePassword\"\r\n                                            placeholder=\"********\"\r\n                                            value={password || ''}\r\n                                            className=\"form-input-1-field\"\r\n                                            onChange={(e) => setPassword(e.target.value)}\r\n                                            onKeyPress={handleKeyPress}\r\n                                        />\r\n                                        <img className=\"pwd-container-img\"\r\n                                            title={isRevealPwd ? \"Hide password\" : \"Show password\"}\r\n                                            src={isRevealPwd ? hidePwdImg : showPwdImg}\r\n                                            onClick={() => setIsRevealPwd(prevState => !prevState)}\r\n                                        />\r\n                                    </div>\r\n                                </FormGroup>\r\n                                <h6 className=\"forgot-pass\"> <Link className=\"forgot-link\" to=\"/\">Forgot Password</Link></h6>\r\n                                <div className=\"submit-button-holder\">\r\n                                    {/* <Button className=\"signin-button\" type='button' onClick={login}>Submit</Button> */}\r\n                                    {submitted?<LinearProgress/>:<Button className=\"signin-button\" type='button' onClick={login}>Submit</Button>}\r\n                                </div>\r\n                                {/* <h6 className=\"register-prompt\">Don’t have an account? <Link className=\"register-link\"> Register</Link></h6> */}\r\n                            </Form>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/**Img */}\r\n                    <div className=\"col-lg-5 offset-lg-1 mobile-view\">\r\n                        <div className=\"add-padding-img\">\r\n                            <img src={require(\"assets/img/fish-float.svg\").default} alt=\"Image\"\r\n                                className=\"img-bg\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                </Row>\r\n\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nconst ForgotPassword =() =>{\r\nreturn(\r\n    <></>\r\n)\r\n\r\n}\r\nexport default ForgotPassword","import React, { useState, useEffect } from \"react\";\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\n\nexport default function ThemeContextWrapper(props) {\n  const [theme, setTheme] = useState(themes.dark);\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(() => {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  BackgroundColorContext,\n  backgroundColors,\n} from \"contexts/BackgroundColorContext\";\n\nexport default function BackgroundColorWrapper(props) {\n  const [color, setColor] = useState(backgroundColors.blue);\n\n  function changeColor(color) {\n    setColor(color);\n  }\n\n  return (\n    <BackgroundColorContext.Provider\n      value={{ color: color, changeColor: changeColor }}\n    >\n      {props.children}\n    </BackgroundColorContext.Provider>\n  );\n}\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { TOKEN } from \"../../config\";\r\n\r\nfunction ProtectedRoute({ component: Component, ...restOfProps }) {\r\n  const isAuthenticated = sessionStorage.getItem(TOKEN)?true:false;\r\n  return (\r\n    <>\r\n        <Route\r\n        {...restOfProps}\r\n        render={(props) =>\r\n            isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\"/>\r\n        }\r\n        />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Switch, Redirect, HashRouter } from \"react-router-dom\";\r\n\r\nimport AdminLayout from \"layouts/Admin/Admin.js\";\r\nimport RTLLayout from \"layouts/RTL/RTL.js\";\r\nimport Login from 'pages/login/Login'\r\nimport ForgotPassword from \"pages/forgot-password/ForgotPass\";\r\nimport \"assets/scss/black-dashboard-react.scss\";\r\nimport \"assets/demo/demo.css\";\r\nimport \"assets/css/nucleo-icons.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nimport ThemeContextWrapper from \"./components/ThemeWrapper/ThemeWrapper\";\r\nimport BackgroundColorWrapper from \"./components/BackgroundColorWrapper/BackgroundColorWrapper\";\r\nimport { Provider } from 'react-redux'\r\nimport store from 'store/store'\r\nimport './index.css'\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute'\r\n\r\nReactDOM.render(\r\n  <ThemeContextWrapper>\r\n    <BackgroundColorWrapper>\r\n      <Provider store={store}>\r\n        <SnackbarProvider maxSnack={3} anchorOrigin={{vertical: 'bottom',horizontal: 'right'}}>\r\n          <HashRouter>\r\n            <Switch>\r\n              <ProtectedRoute path=\"/admin\" name=\"Dashboard\" component={AdminLayout} />\r\n              {/* <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} /> */}\r\n              {/* <Route path=\"/rtl\" render={(props) => <RTLLayout {...props} />} /> */}\r\n              <Route path=\"/login\" render={(props) => <Login {...props} />} />\r\n              <Route path= \"/forgot-password\" render={(props) => <ForgotPassword {...props}/> }/>\r\n              <Redirect from=\"/\" to=\"/admin\" />\r\n            </Switch>\r\n          </HashRouter>\r\n        </SnackbarProvider>\r\n      </Provider>\r\n    </BackgroundColorWrapper>\r\n  </ThemeContextWrapper>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}