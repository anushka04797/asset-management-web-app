[{"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\index.js":"1","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\ProtectedRoute\\ProtectedRoute.js":"2","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\ThemeWrapper\\ThemeWrapper.js":"3","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\BackgroundColorWrapper\\BackgroundColorWrapper.js":"4","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\layouts\\RTL\\RTL.js":"5","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\layouts\\Admin\\Admin.js":"6","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\store\\store.js":"7","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\pages\\forgot-password\\ForgotPass.js":"8","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\pages\\login\\Login.js":"9","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\config.js":"10","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\store\\slices\\portableGeneratorSlice.js":"11","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\store\\slices\\userSlice.js":"12","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\store\\slices\\authSlice.js":"13","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\contexts\\ThemeContext.js":"14","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\contexts\\BackgroundColorContext.js":"15","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\routes.js":"16","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\Footer\\Footer.js":"17","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\Navbars\\RTLNavbar.js":"18","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\Navbars\\AdminNavbar.js":"19","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\Sidebar\\Sidebar.js":"20","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\FixedPlugin\\FixedPlugin.js":"21","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\helper.js":"22","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\views\\Users.js":"23","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\views\\Dashboard.js":"24","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\views\\UserProfile.js":"25","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\data\\data.js":"26","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\AssetDetailsModal\\AssetDetailsModal.js":"27","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\variables\\charts.js":"28","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\MailTo\\MailTo.js":"29"},{"size":1867,"mtime":1646889818283,"results":"30","hashOfConfig":"31"},{"size":507,"mtime":1646889818283,"results":"32","hashOfConfig":"31"},{"size":723,"mtime":1646889818283,"results":"33","hashOfConfig":"31"},{"size":516,"mtime":1646889818252,"results":"34","hashOfConfig":"31"},{"size":5073,"mtime":1646889818283,"results":"35","hashOfConfig":"31"},{"size":4970,"mtime":1646889818283,"results":"36","hashOfConfig":"31"},{"size":344,"mtime":1646889818298,"results":"37","hashOfConfig":"31"},{"size":116,"mtime":1646889818283,"results":"38","hashOfConfig":"31"},{"size":6903,"mtime":1646889818283,"results":"39","hashOfConfig":"31"},{"size":3566,"mtime":1646889818283,"results":"40","hashOfConfig":"31"},{"size":1225,"mtime":1646889818283,"results":"41","hashOfConfig":"31"},{"size":1038,"mtime":1646889818283,"results":"42","hashOfConfig":"31"},{"size":1194,"mtime":1646889818283,"results":"43","hashOfConfig":"31"},{"size":212,"mtime":1646889818283,"results":"44","hashOfConfig":"31"},{"size":266,"mtime":1646889818283,"results":"45","hashOfConfig":"31"},{"size":2674,"mtime":1646890315295,"results":"46","hashOfConfig":"31"},{"size":1094,"mtime":1646889818252,"results":"47","hashOfConfig":"31"},{"size":6569,"mtime":1646889818252,"results":"48","hashOfConfig":"31"},{"size":7792,"mtime":1646889818252,"results":"49","hashOfConfig":"31"},{"size":4679,"mtime":1646889818283,"results":"50","hashOfConfig":"31"},{"size":3735,"mtime":1646889818252,"results":"51","hashOfConfig":"31"},{"size":408,"mtime":1646889818283,"results":"52","hashOfConfig":"31"},{"size":8260,"mtime":1646889818298,"results":"53","hashOfConfig":"31"},{"size":13335,"mtime":1646891924689,"results":"54","hashOfConfig":"31"},{"size":9058,"mtime":1646889818298,"results":"55","hashOfConfig":"31"},{"size":352,"mtime":1646889818283,"results":"56","hashOfConfig":"31"},{"size":7730,"mtime":1646909778877,"results":"57","hashOfConfig":"31"},{"size":12832,"mtime":1646889818298,"results":"58","hashOfConfig":"31"},{"size":291,"mtime":1646889818252,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},"1vf38y1",{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"100","usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"108","usedDeprecatedRules":"63"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"63"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"63"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"63"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"63"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"63"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\index.js",["134","135"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Route, Switch, Redirect, HashRouter } from \"react-router-dom\";\r\n\r\nimport AdminLayout from \"layouts/Admin/Admin.js\";\r\nimport RTLLayout from \"layouts/RTL/RTL.js\";\r\nimport Login from 'pages/login/Login'\r\nimport ForgotPassword from \"pages/forgot-password/ForgotPass\";\r\n\r\nimport \"./assets/scss/black-dashboard-react.scss\"\r\nimport \"assets/demo/demo.css\";\r\nimport \"assets/css/nucleo-icons.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nimport ThemeContextWrapper from \"./components/ThemeWrapper/ThemeWrapper\";\r\nimport BackgroundColorWrapper from \"./components/BackgroundColorWrapper/BackgroundColorWrapper\";\r\nimport { Provider } from 'react-redux'\r\nimport store from 'store/store'\r\nimport './index.css'\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute'\r\n\r\nReactDOM.render(\r\n  <ThemeContextWrapper>\r\n    <BackgroundColorWrapper>\r\n      <Provider store={store}>\r\n        <SnackbarProvider maxSnack={3} anchorOrigin={{vertical: 'bottom',horizontal: 'right'}}>\r\n          <HashRouter>\r\n            <Switch>\r\n              <ProtectedRoute path=\"/admin\" name=\"Dashboard\" component={AdminLayout} />\r\n              {/* <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} /> */}\r\n              {/* <Route path=\"/rtl\" render={(props) => <RTLLayout {...props} />} /> */}\r\n              <Route path=\"/login\" render={(props) => <Login {...props} />} />\r\n              <Route path= \"/forgot-password\" render={(props) => <ForgotPassword {...props}/> }/>\r\n              <Redirect from=\"/\" to=\"/admin\" />\r\n            </Switch>\r\n          </HashRouter>\r\n        </SnackbarProvider>\r\n      </Provider>\r\n    </BackgroundColorWrapper>\r\n  </ThemeContextWrapper>,\r\n  document.getElementById(\"root\")\r\n);\r\n",["136","137"],"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\ProtectedRoute\\ProtectedRoute.js",[],"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\ThemeWrapper\\ThemeWrapper.js",[],"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\BackgroundColorWrapper\\BackgroundColorWrapper.js",[],"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\layouts\\RTL\\RTL.js",[],"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\layouts\\Admin\\Admin.js",["138","139","140","141","142","143","144","145"],"\r\nimport React from \"react\";\r\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// core components\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport logo from \"assets/img/assetlogo.svg\";\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\nimport { is_logged_in } from \"helper\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { USER_ID } from \"config\";\r\nimport { fetchUserDetailsThunk } from \"store/slices/authSlice\";\r\nimport { fetchUsersData } from \"store/slices/userSlice\";\r\nimport { fetchPortableGenerators } from \"store/slices/portableGeneratorSlice\";\r\n\r\nvar ps;\r\n\r\nfunction Admin(props) {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch()\r\n  let history = useHistory()\r\n  const mainPanelRef = React.useRef(null);\r\n  const [sidebarOpened, setsidebarOpened] = React.useState(\r\n    document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n  );\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      document.documentElement.className += \" perfect-scrollbar-on\";\r\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n      ps = new PerfectScrollbar(mainPanelRef.current, {\r\n        suppressScrollX: true,\r\n      });\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n        document.documentElement.classList.add(\"perfect-scrollbar-off\");\r\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\r\n      }\r\n    };\r\n  });\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    if (mainPanelRef.current) {\r\n      mainPanelRef.current.scrollTop = 0;\r\n    }\r\n  }, [location]);\r\n  React.useEffect(()=>{\r\n    if(is_logged_in() == false){\r\n      history.push('/login')\r\n    }\r\n    else{\r\n      // dispatch(fetchUserDetailsThunk(sessionStorage.getItem(USER_ID)))\r\n      // dispatch(fetchPondsData({user_id:sessionStorage.getItem(USER_ID)}))\r\n      // dispatch(fetchUsersData())\r\n      dispatch(fetchPortableGenerators('daily'))\r\n    }\r\n  },[])\r\n  // this function opens and closes the sidebar on small devices\r\n  const toggleSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    setsidebarOpened(!sidebarOpened);\r\n  };\r\n  const getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      return (\r\n        <Route\r\n          path={prop.layout + prop.path}\r\n          component={prop.component}\r\n          key={key}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  const getBrandText = (path) => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  \r\n  return (\r\n    <BackgroundColorContext.Consumer>\r\n      {({ color, changeColor }) => (\r\n        <React.Fragment>\r\n          <div className=\"wrapper\">\r\n            <Sidebar\r\n              routes={routes}\r\n              logo={{\r\n                outterLink: \"#\",\r\n                text: \"Asset Management\",\r\n                imgSrc: logo,\r\n              }}\r\n              toggleSidebar={toggleSidebar}\r\n            />\r\n            <div className=\"main-panel\" ref={mainPanelRef} data={color}>\r\n              <AdminNavbar\r\n                brandText={getBrandText(location.pathname)}\r\n                toggleSidebar={toggleSidebar}\r\n                sidebarOpened={sidebarOpened}\r\n              />\r\n              \r\n              <Switch>\r\n                {getRoutes(routes)}\r\n                {/* <Redirect from=\"*\" to=\"/admin/dashboard\" /> */}\r\n              </Switch>\r\n              {\r\n                // we don't want the Footer to be rendered on map page\r\n                location.pathname === \"/admin/maps\" ? null : <Footer fluid />\r\n              }\r\n            </div>\r\n          </div>\r\n          {/* <FixedPlugin bgColor={color} handleBgClick={changeColor} /> */}\r\n        </React.Fragment>\r\n      )}\r\n    </BackgroundColorContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\store\\store.js",[],"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\pages\\forgot-password\\ForgotPass.js",[],"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\pages\\login\\Login.js",["146","147","148","149","150","151"],"import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\n// reactstrap components\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n    Button,\r\n    Label,\r\n    FormGroup,\r\n    Input,\r\n    Table,\r\n    Row,\r\n    Col, Form, FormText, FormFeedback,\r\n} from \"reactstrap\";\r\nimport './Login.css';\r\nimport showPwdImg from '../../assets/icons/pass-show.svg';\r\nimport hidePwdImg from '../../assets/icons/hide-pass.svg';\r\nimport { TOKEN } from 'config';\r\nimport { PUBLIC_API } from 'config';\r\nimport { USER_ID } from 'config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchUserDetailsThunk } from 'store/slices/authSlice';\r\nimport { useSnackbar } from \"notistack\";\r\nimport { LinearProgress } from \"@mui/material\";\r\nimport { setAuthData } from 'store/slices/authSlice';\r\n\r\nconst Login = () => {\r\n    const [isRevealPwd, setIsRevealPwd] = useState(false);\r\n    let history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState('bwdb-admin')\r\n    const [password, setPassword] = useState('Dhaka!027#')\r\n    const [submitted,setSubmitted]=useState(false)\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar()\r\n    const login = () => {\r\n        setSubmitted(true)\r\n        // sessionStorage.setItem(TOKEN,'1234')\r\n        // sessionStorage.setItem(USER_ID,'1234')\r\n        // history.push({pathname:'/admin/dashboard',state:{from:'login'}})\r\n        \r\n        PUBLIC_API.post('auth/login/',{usr_email:email,password:password}).then((res)=>{\r\n            setSubmitted(false)\r\n            console.log(res)\r\n            sessionStorage.setItem(TOKEN,res.data.token)\r\n            sessionStorage.setItem(USER_ID,res.data.user_data.id)\r\n            dispatch(setAuthData(res.data.user_data))\r\n            history.push({pathname:'/admin/dashboard',state:{from:'login'}})\r\n        }).catch(err=>{\r\n            setSubmitted(false)\r\n            console.log(err.response.data)\r\n            if(err?.response?.data?.message){\r\n                enqueueSnackbar(err.response.data.message,{variant:\"warning\"})\r\n            }\r\n        })\r\n    }\r\n    const handleKeyPress = (event) => {\r\n        if(event.key === 'Enter'){\r\n          login()\r\n        }\r\n      }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <Row className=\"add-padding justify-content-md-center\">\r\n                    <div className=\"col-lg-6 col-sm-12\">\r\n                        <div className=\"add-padding\">\r\n                            <h2 className='login-header'>Sign in</h2>\r\n                            <Form className=\"form-signin\">\r\n                                <FormGroup>\r\n                                    <Label className=\"form-input-1-label\">Username</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"email\"\r\n                                        id=\"exampleEmail\"\r\n                                        placeholder=\"example@example.com\"\r\n                                        // valid={this.state.validate.emailState === \"has-success\"}\r\n                                        // invalid={this.state.validate.emailState === \"has-danger\"}\r\n                                        value={email || ''}\r\n                                        className=\"form-input-1-field\"\r\n                                        onChange={(e) => \r\n                                            setEmail(e.target.value)\r\n                                        }\r\n                                    />\r\n                                    <FormFeedback>\r\n                                        Uh oh!Looks like there is an issue with your email/username.Please input\r\n                                        a correct one.\r\n                                    </FormFeedback>\r\n                                    <FormFeedback valid>\r\n                                        That's a tasty looking email you've got there.\r\n                                    </FormFeedback>\r\n                                    <FormText>Your username is most likely your email or username.</FormText>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label for=\"examplePassword\" className=\"form-input-1-label\" >Password</Label>\r\n                                    <div className=\"password-container\">\r\n                                        <Input\r\n                                            type={isRevealPwd ? \"text\" : \"password\"}\r\n                                            name=\"password\"\r\n                                            id=\"examplePassword\"\r\n                                            placeholder=\"********\"\r\n                                            value={password || ''}\r\n                                            className=\"form-input-1-field\"\r\n                                            onChange={(e) => setPassword(e.target.value)}\r\n                                            onKeyPress={handleKeyPress}\r\n                                        />\r\n                                        <img className=\"pwd-container-img\"\r\n                                            title={isRevealPwd ? \"Hide password\" : \"Show password\"}\r\n                                            src={isRevealPwd ? hidePwdImg : showPwdImg}\r\n                                            onClick={() => setIsRevealPwd(prevState => !prevState)}\r\n                                        />\r\n                                    </div>\r\n                                </FormGroup>\r\n                                <h6 className=\"forgot-pass\"> <Link className=\"forgot-link\" to=\"/\">Forgot Password</Link></h6>\r\n                                <div className=\"submit-button-holder\">\r\n                                    {/* <Button className=\"signin-button\" type='button' onClick={login}>Submit</Button> */}\r\n                                    {submitted?<LinearProgress/>:<Button className=\"signin-button\" type='button' onClick={login}>Submit</Button>}\r\n                                </div>\r\n                                {/* <h6 className=\"register-prompt\">Don’t have an account? <Link className=\"register-link\"> Register</Link></h6> */}\r\n                            </Form>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    {/**Img */}\r\n                    {/* <div className=\"col-lg-5 offset-lg-1 mobile-view\">\r\n                        <div className=\"add-padding-img\">\r\n                            <img src={require(\"assets/img/fish-float.svg\").default} alt=\"Image\"\r\n                                className=\"img-bg\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                </Row>\r\n\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\config.js",[],"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\store\\slices\\portableGeneratorSlice.js",["152","153"],"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { pg_generators } from 'data/data'\r\nimport { JsonClient, USER_ID } from '../../config'\r\n\r\n\r\nconst initialState = {\r\n  data: [],\r\n  status: 'idle',\r\n  error: ''\r\n}\r\n\r\nexport const fetchPortableGenerators = createAsyncThunk('wbs/fetchPortableGenerators', async (type) => {\r\n  const response = await JsonClient.get('devices/data/pg/1?type='+type)\r\n  console.log(\"all devices daily data\", response)\r\n  return response.data\r\n  // return pg_generators\r\n})\r\n\r\nexport const portableGeneratorSlice = createSlice({\r\n  name: 'portable_generators',\r\n  initialState,\r\n  reducers: {\r\n\r\n  },\r\n  extraReducers: {\r\n    [fetchPortableGenerators.pending]: (state, action) => {\r\n      state.status = 'loading'\r\n    },\r\n    [fetchPortableGenerators.fulfilled]: (state, action) => {\r\n      state.status = 'succeeded'\r\n      // Add any fetched posts to the array\r\n      state.data = action.payload\r\n    },\r\n    [fetchPortableGenerators.rejected]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.error.message\r\n    },\r\n  }\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\n\r\nexport default portableGeneratorSlice.reducer\r\n","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\store\\slices\\userSlice.js",[],"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\store\\slices\\authSlice.js",[],"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\contexts\\ThemeContext.js",[],"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\contexts\\BackgroundColorContext.js",[],"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\routes.js",["154","155"],"import Dashboard from \"views/Dashboard.js\";\r\nimport Users from \"views/Users.js\";\r\n// import Icons from \"views/Icons.js\";\r\n// import Map from \"views/Map.js\";\r\n// import Notifications from \"views/Notifications.js\";\r\n// import Rtl from \"views/Rtl.js\";\r\n// import TableList from \"views/TableList.js\";\r\n// import Typography from \"views/Typography.js\";\r\nimport UserProfile from \"views/UserProfile.js\";\r\n\r\nvar routes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    icon:\"tim-icons icon-chart-pie-36\",\r\n    component: Dashboard,\r\n    layout: \"/admin\",\r\n  },\r\n  // {\r\n  //   path: \"/profile\",\r\n  //   name: \"Profile\",\r\n  //   icon:\"tim-icons icon-single-02\",\r\n  //   component: UserProfile,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/users\",\r\n  //   name: \"Settings\",\r\n  //   icon:\"tim-icons icon-align-center\",\r\n  //   component: Users,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/users\",\r\n  //   name: \"Summary\",\r\n  //   icon:\"tim-icons icon-align-center\",\r\n  //   component: Users,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/users\",\r\n  //   name: \"cats\",\r\n  //   icon:\"tim-icons icon-align-center\",\r\n  //   component: Users,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/icons\",\r\n  //   name: \"Icons\",\r\n  //   rtlName: \"الرموز\",\r\n  //   icon: \"tim-icons icon-atom\",\r\n  //   component: Icons,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/map\",\r\n  //   name: \"Map\",\r\n  //   rtlName: \"خرائط\",\r\n  //   icon: \"tim-icons icon-pin\",\r\n  //   component: Map,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/notifications\",\r\n  //   name: \"Notifications\",\r\n  //   rtlName: \"إخطارات\",\r\n  //   icon: \"tim-icons icon-bell-55\",\r\n  //   component: Notifications,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/user-profile\",\r\n  //   name: \"User Profile\",\r\n  //   rtlName: \"ملف تعريفي للمستخدم\",\r\n  //   icon: \"tim-icons icon-single-02\",\r\n  //   component: UserProfile,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/tables\",\r\n  //   name: \"Table List\",\r\n  //   rtlName: \"قائمة الجدول\",\r\n  //   icon: \"tim-icons icon-puzzle-10\",\r\n  //   component: TableList,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/typography\",\r\n  //   name: \"Typography\",\r\n  //   rtlName: \"طباعة\",\r\n  //   icon: \"tim-icons icon-align-center\",\r\n  //   component: Typography,\r\n  //   layout: \"/admin\",\r\n  // },\r\n  // {\r\n  //   path: \"/rtl-support\",\r\n  //   name: \"RTL Support\",\r\n  //   rtlName: \"ار تي ال\",\r\n  //   icon: \"tim-icons icon-world\",\r\n  //   component: Rtl,\r\n  //   layout: \"/rtl\",\r\n  // },\r\n];\r\nexport default routes;\r\n","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\Footer\\Footer.js",["156"],"import React from \"react\";\r\nimport { Container, Nav, NavItem, NavLink } from \"reactstrap\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container fluid>\r\n        <Nav>\r\n          <NavItem>\r\n            <NavLink href=\"https://dma-bd.com\">\r\n              DMA\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink href=\"https://dma-bd.com/about-me/home/\">\r\n              About Us\r\n            </NavLink>\r\n          </NavItem>\r\n          {/* <NavItem>\r\n            <NavLink href=\"https://www.creative-tim.com/blog?ref=bdr-user-archive-footer\">\r\n              Blog\r\n            </NavLink>\r\n          </NavItem> */}\r\n        </Nav>\r\n        <div className=\"copyright\">\r\n          © {new Date().getFullYear()} made with{\" \"}\r\n          <i className=\"tim-icons icon-heart-2\" /> by{\" \"}\r\n          <a\r\n            href=\"https://dma-bd.com\"\r\n            target=\"_blank\"\r\n          >\r\n            DMA\r\n          </a>{\" \"}\r\n          for a better web.\r\n        </div>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\Navbars\\RTLNavbar.js",[],"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\Navbars\\AdminNavbar.js",["157","158","159"],"\r\nimport React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\nimport Clock from 'react-live-clock';\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Input,\r\n  InputGroup,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Modal,\r\n  NavbarToggler,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\"\r\nimport './AdminNavbar.css'\r\nimport { API } from \"config\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AdminNavbar(props) {\r\n  let history = useHistory()\r\n  const [collapseOpen, setcollapseOpen] = React.useState(false);\r\n  const [modalSearch, setmodalSearch] = React.useState(false);\r\n  const [color, setcolor] = React.useState(\"navbar-transparent\");\r\n  const user = useSelector(state=>state.auth.data)\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"resize\", updateColor);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", updateColor);\r\n    };\r\n  });\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  const updateColor = () => {\r\n    if (window.innerWidth < 993 && collapseOpen) {\r\n      setcolor(\"bg-white\");\r\n    } else {\r\n      setcolor(\"navbar-transparent\");\r\n    }\r\n  };\r\n  // this function opens and closes the collapse on small devices\r\n  const toggleCollapse = () => {\r\n    if (collapseOpen) {\r\n      setcolor(\"navbar-transparent\");\r\n    } else {\r\n      setcolor(\"bg-white\");\r\n    }\r\n    setcollapseOpen(!collapseOpen);\r\n  };\r\n  const logout=()=>{\r\n    API.get('auth/logout').then((res)=>{\r\n      console.log(res)\r\n      sessionStorage.clear()\r\n      history.push('/login')\r\n    }).catch(err=>{\r\n      sessionStorage.clear()\r\n      history.push('/login')\r\n    })\r\n  }\r\n  // this function is to open the Search modal\r\n  const toggleModalSearch = () => {\r\n    setmodalSearch(!modalSearch);\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar className={classNames(\"navbar-absolute\", color)} expand=\"lg\">\r\n        <Container fluid>\r\n          <div className=\"navbar-wrapper\">\r\n            <div\r\n              className={classNames(\"navbar-toggle d-inline\", {\r\n                toggled: props.sidebarOpened,\r\n              })}\r\n            >\r\n              <NavbarToggler onClick={props.toggleSidebar}>\r\n                <span className=\"navbar-toggler-bar bar1\" />\r\n                <span className=\"navbar-toggler-bar bar2\" />\r\n                <span className=\"navbar-toggler-bar bar3\" />\r\n              </NavbarToggler>\r\n            </div>\r\n            {/* <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n              {props.brandText}\r\n            </NavbarBrand> */}\r\n          </div>\r\n          <NavbarToggler onClick={toggleCollapse}>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n          </NavbarToggler>\r\n          <Collapse navbar isOpen={collapseOpen}>\r\n           \r\n          \r\n        \r\n            <Nav className=\"ml-auto\" navbar>\r\n            <div className=\"show-datetime mr-auto\">\r\n                <span className=\"show-date\"><Clock format={'dddd, MMM Mo, YYYY'}/></span>\r\n                <span className=\"show-time\"><Clock  format={'h:mm:ssa'} ticking={true}/></span>\r\n              </div>\r\n              {/* <InputGroup className=\"search-bar\">\r\n                <Button color=\"link\" onClick={toggleModalSearch}>\r\n                  <i className=\"tim-icons icon-zoom-split\" />\r\n                  <span className=\"d-lg-none d-md-block\">Search</span>\r\n                </Button>\r\n              </InputGroup> */}\r\n              {/* <UncontrolledDropdown nav>\r\n                <DropdownToggle\r\n                  caret\r\n                  color=\"default\"\r\n                  data-toggle=\"dropdown\"\r\n                  nav\r\n                >\r\n                  <div className=\"notification d-none d-lg-block d-xl-block\" />\r\n                  <i className=\"tim-icons icon-sound-wave\" />\r\n                  <p className=\"d-lg-none\">Notifications</p>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">\r\n                      Mike John responded to your email\r\n                    </DropdownItem>\r\n                  </NavLink>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">\r\n                      You have 5 more tasks\r\n                    </DropdownItem>\r\n                  </NavLink>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">\r\n                      Your friend Michael is in town\r\n                    </DropdownItem>\r\n                  </NavLink>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">\r\n                      Another notification\r\n                    </DropdownItem>\r\n                  </NavLink>\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">\r\n                      Another one\r\n                    </DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown> */}\r\n          \r\n              <UncontrolledDropdown nav>\r\n             \r\n                <DropdownToggle className=\"mr-4\"\r\n                  caret\r\n                  color=\"default\"\r\n                  nav\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  <span className=\"user-name-view\">{user.first_name+' '+user.last_name}</span>\r\n                  <div className=\"photo\">\r\n                    <img\r\n                      alt=\"...\"\r\n                      src={require(\"assets/img/anime3.png\").default}\r\n                    />\r\n                       \r\n                    </div>\r\n                 \r\n                  \r\n                  <b className=\"caret d-none d-lg-block d-xl-block\" />\r\n                  <p className=\"d-lg-none custom-logout\" onClick={logout}>Log out</p>\r\n                </DropdownToggle>\r\n\r\n                <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">Profile</DropdownItem>\r\n                  </NavLink>\r\n                  {/* <NavLink tag=\"li\">\r\n                    <DropdownItem className=\"nav-item\">Settings</DropdownItem>\r\n                  </NavLink> */}\r\n                  <DropdownItem divider tag=\"li\" />\r\n                  <NavLink tag=\"li\">\r\n                    <DropdownItem onClick={logout} className=\"nav-item\">Logout</DropdownItem>\r\n                  </NavLink>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              \r\n              <NavLink className=\"log-out-nav\" onClick={logout}>Logout</NavLink>\r\n              <li className=\"separator d-lg-none\" />\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      \r\n      <Modal\r\n        modalClassName=\"modal-search\"\r\n        isOpen={modalSearch}\r\n        toggle={toggleModalSearch}\r\n      >\r\n        <ModalHeader>\r\n          <Input placeholder=\"SEARCH\" type=\"text\" />\r\n          <button\r\n            aria-label=\"Close\"\r\n            className=\"close\"\r\n            onClick={toggleModalSearch}\r\n          >\r\n            <i className=\"tim-icons icon-simple-remove\" />\r\n          </button>\r\n        </ModalHeader>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminNavbar;\r\n","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\Sidebar\\Sidebar.js",["160","161","162","163","164","165","166"],"import React from \"react\";\r\nimport { NavLink, Link, useLocation } from \"react-router-dom\";\r\n// nodejs library to set properties for components\r\nimport { PropTypes } from \"prop-types\";\r\n\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\n// reactstrap components\r\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\r\nimport {\r\n  BackgroundColorContext,\r\n  backgroundColors,\r\n} from \"contexts/BackgroundColorContext\";\r\n\r\nvar ps;\r\n\r\nfunction Sidebar(props) {\r\n  const location = useLocation();\r\n  const sidebarRef = React.useRef(null);\r\n  // verifies if routeName is the one active (in browser input)\r\n  const activeRoute = (routeName) => {\r\n    return location.pathname === routeName ? \"active\" : \"\";\r\n  };\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(sidebarRef.current, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false,\r\n      });\r\n    }\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n      }\r\n    };\r\n  });\r\n  const linkOnClick = () => {\r\n    document.documentElement.classList.remove(\"nav-open\");\r\n  };\r\n  const { routes, rtlActive, logo } = props;\r\n  let logoImg = null;\r\n  let logoText = null;\r\n  if (logo !== undefined) {\r\n    if (logo.outterLink !== undefined) {\r\n      logoImg = (\r\n        <a\r\n          href={logo.outterLink}\r\n          className=\"simple-text\"\r\n          target=\"_blank\"\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          <div className=\"logo-img\">\r\n            <img src={logo.imgSrc} alt=\"ccda-logo\" />\r\n          </div>\r\n        </a>\r\n      );\r\n      logoText = (\r\n        <a\r\n          href={logo.outterLink}\r\n          className=\"simple-text logo-normal\"\r\n          target=\"_blank\"\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          {logo.text}\r\n        </a>\r\n      );\r\n    } else {\r\n      logoImg = (\r\n        <Link\r\n          to={logo.innerLink}\r\n\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          <div className=\"logo-img\">\r\n            <img src={logo.imgSrc} alt=\"react-logo\" className=\"fish-logo\" />\r\n          </div>\r\n        </Link>\r\n      );\r\n      logoText = (\r\n        <Link\r\n          to={logo.innerLink}\r\n\r\n          onClick={props.toggleSidebar}\r\n        >\r\n          {logo.text}\r\n        </Link>\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar-wrapper\" ref={sidebarRef}>\r\n        {logoImg !== null || logoText !== null ? (\r\n          <div className=\"logo\">\r\n            {logoImg}\r\n            {logoText}\r\n          </div>\r\n        ) : null}\r\n        <Nav>\r\n          {routes.map((prop, key) => {\r\n            if (prop.redirect) return null;\r\n            return (\r\n              <li\r\n                className={\r\n                  activeRoute(prop.layout+prop.path)\r\n                }\r\n                key={key}\r\n              >\r\n                <NavLink\r\n                  to={prop.layout + prop.path}\r\n                  className=\"nav-link\"\r\n                  activeClassName=\"active\"\r\n                  onClick={props.toggleSidebar}\r\n                >\r\n                  <i className={prop.icon} />\r\n                  <p className=\"dashboard-link\">{prop.name}</p>\r\n                </NavLink>\r\n              </li>\r\n            );\r\n          })}\r\n          {/* <li className=\"active-pro\">\r\n                <ReactstrapNavLink href=\"https://www.creative-tim.com/product/black-dashboard-pro-react?ref=bdr-user-archive-sidebar-upgrade-pro\">\r\n                  <i className=\"tim-icons icon-spaceship\" />\r\n                  <p>Upgrade to PRO</p>\r\n                </ReactstrapNavLink>\r\n              </li> */}\r\n        </Nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  rtlActive: false,\r\n  routes: [{}],\r\n};\r\n\r\nSidebar.propTypes = {\r\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\r\n  // insde the links of this component\r\n  rtlActive: PropTypes.bool,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  logo: PropTypes.shape({\r\n    // innerLink is for links that will direct the user within the app\r\n    // it will be rendered as <Link to=\"...\">...</Link> tag\r\n    innerLink: PropTypes.string,\r\n    // outterLink is for links that will direct the user outside the app\r\n    // it will be rendered as simple <a href=\"...\">...</a> tag\r\n    outterLink: PropTypes.string,\r\n    // the text of the logo\r\n    text: PropTypes.node,\r\n    // the image src of the logo\r\n    imgSrc: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\FixedPlugin\\FixedPlugin.js",["167"],"import React from \"react\";\r\n\r\n// reactstrap components\r\nimport { Button, Dropdown, DropdownToggle, Badge } from \"reactstrap\";\r\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\r\nimport { backgroundColors } from \"contexts/BackgroundColorContext\";\r\n\r\nfunction FixedPlugin(props) {\r\n  const [dropDownIsOpen, setdropDownIsOpen] = React.useState(false);\r\n  const handleClick = () => {\r\n    setdropDownIsOpen(!dropDownIsOpen);\r\n  };\r\n  return (\r\n    <div className=\"fixed-plugin\">\r\n      <Dropdown isOpen={dropDownIsOpen} toggle={handleClick}>\r\n        <DropdownToggle tag=\"div\">\r\n          <i className=\"fa fa-cog fa-2x\" />\r\n        </DropdownToggle>\r\n        <ul className=\"dropdown-menu show\">\r\n          <li className=\"header-title\">SIDEBAR BACKGROUND</li>\r\n          <li className=\"adjustments-line\">\r\n            <div className=\"badge-colors text-center\">\r\n              <Badge\r\n                color=\"primary\"\r\n                className={\r\n                  props.bgColor === backgroundColors.primary ? \"active\" : \"\"\r\n                }\r\n                onClick={() => {\r\n                  props.handleBgClick(backgroundColors.primary);\r\n                }}\r\n              />{\" \"}\r\n              <Badge\r\n                color=\"info\"\r\n                className={\r\n                  props.bgColor === backgroundColors.blue ? \"active\" : \"\"\r\n                }\r\n                onClick={() => {\r\n                  props.handleBgClick(backgroundColors.blue);\r\n                }}\r\n              />{\" \"}\r\n              <Badge\r\n                color=\"success\"\r\n                className={\r\n                  props.bgColor === backgroundColors.green ? \"active\" : \"\"\r\n                }\r\n                onClick={() => {\r\n                  props.handleBgClick(backgroundColors.green);\r\n                }}\r\n              />{\" \"}\r\n            </div>\r\n          </li>\r\n          <li className=\"adjustments-line text-center color-change\">\r\n            <ThemeContext.Consumer>\r\n              {({ changeTheme }) => (\r\n                <>\r\n                  <span className=\"color-label\">LIGHT MODE</span>{\" \"}\r\n                  <Badge\r\n                    className=\"light-badge mr-2\"\r\n                    onClick={() => changeTheme(themes.light)}\r\n                  />{\" \"}\r\n                  <Badge\r\n                    className=\"dark-badge ml-2\"\r\n                    onClick={() => changeTheme(themes.dark)}\r\n                  />{\" \"}\r\n                  <span className=\"color-label\">DARK MODE</span>{\" \"}\r\n                </>\r\n              )}\r\n            </ThemeContext.Consumer>\r\n          </li>\r\n          {/* <li className=\"button-container\">\r\n            <Button\r\n              href=\"https://www.creative-tim.com/product/black-dashboard-react\"\r\n              color=\"primary\"\r\n              block\r\n              className=\"btn-round\"\r\n            >\r\n              Download Now\r\n            </Button>\r\n            <Button\r\n              color=\"default\"\r\n              block\r\n              className=\"btn-round\"\r\n              outline\r\n              href=\"https://demos.creative-tim.com/black-dashboard-react/#/documentation/tutorial\"\r\n            >\r\n              Documentation\r\n            </Button>\r\n          </li> */}\r\n          {/* <li className=\"header-title\">Want more components?</li>\r\n          <li className=\"button-container\">\r\n            <Button\r\n              href=\"https://www.creative-tim.com/product/black-dashboard-pro-react\"\r\n              className=\"btn-round\"\r\n              disabled\r\n              block\r\n              color=\"danger\"\r\n            >\r\n              Get pro version\r\n            </Button>\r\n          </li> */}\r\n        </ul>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FixedPlugin;\r\n","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\helper.js",["168"],"export const is_logged_in = () => {\r\n    if (sessionStorage.getItem('access-token') != null && sessionStorage.getItem('access-token') != undefined) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\nexport const colors=[\r\n    '#FFFF00','#00FF00'\r\n]\r\n\r\n\r\nexport function capitalizeFirstLetter(string=\"\") {\r\n    return (string!=null && string.length>0) ? string.charAt(0).toUpperCase() + string.slice(1):''\r\n}","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\views\\Users.js",["169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport UpArrow from \"../assets/icons/up-arrow.svg\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// react plugin used to create charts\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport SearchField from 'react-search-field';\r\nimport SafePondDot from '../assets/icons/safe-pond.svg'\r\nimport PaperIcon from '../assets/icons/Paper.svg'\r\nimport RefreshIcon from '../assets/icons/refresh.svg'\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Nav,\r\n  NavLink,\r\n  ButtonToolbar,\r\n  Table,\r\n  ButtonToggle,\r\n  Row,\r\n  TabContent,\r\n  TabPane,\r\n  Col,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n\r\n} from \"reactstrap\";\r\n\r\n// core components\r\nimport {\r\n  chartExample1,\r\n  chartExample2,\r\n\r\n  chartExample4,\r\n} from \"variables/charts.js\";\r\n// import \"../../src/assets/css/Users.css\";\r\nimport '../index.css'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport { API } from \"config\";\r\nimport { generate_graph_data } from \"helper\";\r\nimport { useLocation } from 'react-router';\r\nimport { useSnackbar } from 'notistack';\r\nimport store from \"store/store\";\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { fetchUsersData } from \"store/slices/userSlice\";\r\nimport Mailto from \"components/MailTo/MailTo\";\r\n\r\nfunction Users(props) {\r\n  const animatedComponents = makeAnimated();\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\r\n  let location = useLocation()\r\n  const dispatch = useDispatch()\r\n  const [showAssetUpdateModal,setShowAssetUpdateModal] = useState(false)\r\n  const closeForm=()=>{\r\n      setShowAssetUpdateModal(false)\r\n      setSelectedUser(null)\r\n  }\r\n  const users = useSelector(state => state.users.data)\r\n  \r\n  // const device_data_ref = React.forwardRef(null)\r\n  {/**Code for writing table search */ }\r\n  function onChange(value, event) {\r\n    console.log(value,event)\r\n  }\r\n  const [selected_user,setSelectedUser]=useState()\r\n  \r\n  useEffect(()=>{\r\n    // console.log(device_data_ref.current)\r\n    console.log('users mounted')\r\n  },[])\r\n  const [message,setMessage]=useState()\r\n  const [assets,setAssets]=useState()\r\n  const [selectedAssets,setSelectedAssets]=useState('')\r\n  const get_free_assets=()=>{\r\n    API.get('assets/list/').then((res)=>{\r\n      console.log('all assets',res.data)\r\n      let temp=[]\r\n      res.data.data.forEach((asset,idx)=>{\r\n        temp.push({value:asset.id,label:asset.ast_name,data:asset})\r\n      })\r\n      setAssets(temp)\r\n    }).catch(err=>{\r\n      console.log(err.response.data)\r\n    })\r\n  }\r\n  \r\n  const handleAssetsChange=(options,actionMeta)=>{\r\n    let temp ='';\r\n    options.forEach((option,idx)=>{\r\n      if(idx < options.length-1){\r\n        temp+=option.value+','\r\n      }\r\n      else{\r\n        temp+=option.value\r\n      }\r\n    })\r\n    setSelectedAssets(temp)\r\n  }\r\n  const assign_asset_to_user=()=>{\r\n    API.post('assets/assign/to/user/',{user_id:selected_user.id,asset_ids:selectedAssets}).then((res)=>{\r\n      setSelectedAssets('')\r\n      closeForm()\r\n      get_free_assets()\r\n      dispatch(fetchUsersData())\r\n      enqueueSnackbar('Assets assigned to user',{variant:'success'})\r\n    })\r\n  }\r\n  const swap_user_verification_status=(user_id)=>{\r\n    API.post('auth/user/active/inactive/',{user_id:user_id}).then(res=>{\r\n      console.log(res.data)\r\n      dispatch(fetchUsersData())\r\n      enqueueSnackbar('User activation status updated',{variant:'success'})\r\n    }).catch(err=>{\r\n      enqueueSnackbar('Something went wrong, Please try again later',{variant:'warning'})\r\n    })\r\n  }\r\n  React.useEffect(()=>{\r\n    get_free_assets()\r\n  },[])\r\n  return (\r\n    <>\r\n    <Modal\r\n        isOpen={showAssetUpdateModal}\r\n        size='md'\r\n        className=\"p-2\"\r\n      >\r\n        <ModalHeader className=\"custom-modal-header\">\r\n          <span style={{color:'white'}}>Assign ponds to {selected_user?.first_name}</span>\r\n        </ModalHeader>\r\n        <ModalBody className=\"custom-modal-design\" >\r\n          <Form>\r\n            {/* <FormGroup>\r\n              <Input value={message} onChange={(e)=>setMessage(e.target.value)} type=\"textarea\" className=\"modal-custom-input\" placeholder=\"Type here...\" />\r\n            </FormGroup> */}\r\n            <FormGroup>\r\n              <Select onChange={handleAssetsChange} components={animatedComponents} closeMenuOnSelect={false} isMulti options={assets}/>\r\n            </FormGroup>\r\n          </Form>\r\n          <div className=\"moadl-button-holder\">\r\n            <Button type=\"button\" onClick={assign_asset_to_user} className=\"okay-button-modal\">\r\n              Save\r\n            </Button>\r\n            <Button className=\"cancel-button-modal ml-2\"\r\n              onClick={() => closeForm()}\r\n            >\r\n              cancel\r\n            </Button>\r\n          </div>\r\n        </ModalBody>\r\n        {/* <ModalFooter className=\"p-2\">\r\n          \r\n        </ModalFooter> */}\r\n      </Modal>\r\n\r\n      {/**modal ends */}\r\n      <div className=\"content\">\r\n        <Row>\r\n          {/*______CARD FOR VIEWING DATA IN TABLE______ */}\r\n          <Col lg=\"12\" md=\"12\">\r\n            <Card className=\"table-holder-class\">\r\n\r\n              <CardHeader>\r\n                {/* <CardTitle tag=\"h4\">Simple Table</CardTitle> */}\r\n              </CardHeader>\r\n              <CardBody>\r\n                {/**SERACH FIELD */}\r\n                <SearchField\r\n                  className=\"table-search\"\r\n                  placeholder='Search by'\r\n                  onChange={onChange}\r\n                />\r\n                <Table className=\"tablesorter pond-details\" responsive hover>\r\n                  <thead className=\"text-primary\">\r\n                    <tr>\r\n                      <th className=\"pond-value-pointer\">User ID</th>\r\n                      <th className=\"pond-value-pointer\">Name</th>\r\n                      <th className=\"pond-value-pointer\">Email</th>\r\n                      <th className=\"pond-value-pointer\">Phone</th>\r\n                      <th className=\"pond-value-pointer\">Status</th>\r\n                      {/* <th className=\"text-center pond-value-pointer\">Action</th> */}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {users.length>0 && Array.from(users).map((user, idx) => (\r\n                      <tr key={idx}>\r\n                        <td className=\"pond-actual-value\">{idx+1}</td>\r\n                        <td className=\"pond-actual-value\">{user.first_name+' '+user.last_name}</td>\r\n                        <td className=\"pond-actual-value\"><Mailto email={user.usr_email}/></td>\r\n                        <td className=\"pond-actual-value\">{user.user_phone!=null?user.user_phone.phn_cell:''}</td>\r\n                        <td className={`pond-actual-value ${user.is_active ? \"status-text-active\" : \"status-text-inactive\"}`}>{user.is_active?'Active':'Inactive'}</td>\r\n                        {/* <td className=\"text-center pond-actual-value\">{user.ph}</td>\r\n                        <td className=\"text-center pond-actual-value\">{user.temp} ℃</td>\r\n                        <td className=\"text-center pond-actual-value\">{user.tds} mg/L</td>\r\n                        <td className=\"text-center pond-actual-value\">comment</td> */}\r\n                        {/* <th className=\"text-center pond-actual-value ml-auto\">\r\n                        <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                          <ButtonGroup aria-label=\"Third group\" className=\"m-auto\" size=\"sm\">\r\n                            <Button onClick={()=>{setSelectedUser(user);setShowAssetUpdateModal(true)}}>Manage Ponds</Button>\r\n                          </ButtonGroup>\r\n                        </ButtonToolbar>\r\n                        </th> */}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\views\\Dashboard.js",["199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237"],"import React, { useEffect, useRef, useState } from \"react\";\r\n\r\n// react plugin used to create charts\r\n\r\nimport SearchField from 'react-search-field';\r\nimport SafePondDot from '../assets/icons/safe-pond.svg'\r\nimport OfflineDot from '../assets/icons/offline.svg'\r\nimport axios from 'axios';\r\n\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport Typography from '@mui/material/Typography';\r\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\r\n// reactstrap components\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Table,\r\n  Row,\r\n  Col,\r\n  Dropdown, DropdownItem, DropdownToggle, DropdownMenu,ButtonGroup,ButtonToggle,ButtonToolbar\r\n} from \"reactstrap\";\r\n\r\n// core components\r\n\r\nimport \"../../src/assets/css/Dashboard.css\";\r\nimport '../index.css'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport { API } from \"config\";\r\nimport { useLocation } from 'react-router';\r\nimport { useSnackbar } from 'notistack';\r\nimport store from \"store/store\";\r\n\r\nimport AssetDetailsModal from \"components/AssetDetailsModal/AssetDetailsModal\";\r\nimport { capitalizeFirstLetter } from \"helper\";\r\n// import { MapContainer } from \"../components/google-map/GoogleMap\";\r\n\r\n\r\n\r\nfunction Dashboard(props) {\r\n  const graph_div_ref = useRef(null)\r\n  const [searchText, setSearchText] = useState(' ')\r\n  const executeScroll = () => graph_div_ref.current.scrollIntoView()\r\n  \r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\r\n  const dispatch = useDispatch()\r\n  let location = useLocation()\r\n  const [assets, setassets] = useState([])\r\n  const [filtered_assets,setFilteredAssets]=useState([])\r\n  \r\n  function onEnter(value, event) {\r\n    console.log(value);\r\n    alert(\"hello \" + value);\r\n\r\n  }\r\n  // const device_data_ref = React.forwardRef(null)\r\n  {/**Code for writing table search */ }\r\n  function filterBy_AssetName_RiverName(value) {\r\n    return value.data.ast_name \r\n  }\r\n  function onChange(value, event) {\r\n    //var str= document.getElementById(\"searchText\").value;\r\n    //alert() //+ {str});\r\n    // var a= document.getElementById(\"searchText\");\r\n    // console.log(a)\r\n    setSearchText(value)\r\n    if(value.length>0){\r\n      console.log(value, event)\r\n      setFilteredAssets(filtered_assets.filter(asset=>String(asset.data.ast_name).toLowerCase().includes(String(value).toLowerCase()) || String(asset.data.ast_river?.riv_name).toLowerCase().includes(String(value).toLowerCase())))\r\n      // console.log(temp)\r\n    }\r\n    else{\r\n      \r\n      setFilteredAssets(assets)\r\n    }\r\n  }\r\n\r\n  const [showTaskForm, setShowTaskForm] = useState(false);\r\n  const [currentActiveTab, setCurrentActiveTab] = useState('1');\r\n  const toggleTaskForm = () => {\r\n    setShowTaskForm(!showTaskForm);\r\n  };\r\n  const closeForm = () => {\r\n    setShowTaskForm(false)\r\n  }\r\n  // Toggle active state for Tab\r\n  const toggle = tab => {\r\n    if (currentActiveTab !== tab) setCurrentActiveTab(tab);\r\n  }\r\n  const [isOpen, setOpen] = useState(false)\r\n  const toggleDropDown = () => {\r\n    setOpen(!isOpen)\r\n  }\r\n  \r\n  const [selected_option, setSelectedOption] = useState('Export')\r\n  \r\n\r\n  const [pdfTitle, setPdfTitle] = useState();\r\n  const [pdfData, setPdfData] = useState([])\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n  const fileExtension = '.xlsx';\r\n  //const fileName = 'a'\r\n  const exportToCSV = (csvData) => {\r\n    const xlData = [];\r\n    for (let i = 0; i < csvData.length; i++) {\r\n      const item = csvData[i];\r\n      xlData.push({\r\n        'Sl. No': i + 1, 'Serial No.': item.ast_serial, 'Asset Name': item.ast_name, 'Asset type': item.ast_type.ast_title, 'River': item.ast_river.riv_name, 'Address': item.ast_address ? item.ast_address + ', ' + item.ast_union.uni_name + ', ' + item.ast_upazila.upa_name + ', ' + item.ast_district.dis_name + ', ' + item.ast_division.div_name :\r\n          item.ast_union.uni_name + ', ' + item.ast_upazila.upa_name + ', ' + item.ast_district.dis_name + ', ' + item.ast_division.div_name, 'Status': item.ast_status.ast_status_name, 'Date & time': date(item.ast_updated_at ? item.ast_updated_at : item.ast_created_at)\r\n      })\r\n    }\r\n\r\n    console.log('data', xlData);\r\n\r\n    const fileName = 'asset data'\r\n    const ws = XLSX.utils.json_to_sheet(xlData);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  }\r\n\r\n  function export_pdf() {\r\n    // const unit = \"pt\";\r\n    //     const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    //     const orientation = \"portrait\"; // portrait or landscape\r\n\r\n    //     const marginLeft = 40;\r\n    //     const doc = new jsPDF(orientation, unit, size);\r\n\r\n    //     doc.setFontSize(15);\r\n\r\n    //     const title = \"Timecard of\" + \" \" + pdfTitle;\r\n    //     const headers = [[\"#\",\r\n    //         \"Project Name (Work Package)\",\r\n    //         \"Task Title\",\r\n    //         \"Actual Work Done\",\r\n    //         \"Hour(s)\",\r\n    //         \"Date Created\"]];\r\n    //     const uData = pdfData.map((elt, idx) => [idx + 1, elt.data.project.sub_task + ' (' + elt.data.project.work_package_number + ')', elt.data?.project.task_title, elt.data.actual_work_done, elt.data.hours_today, elt.data.date_created]);\r\n    //     let content = {\r\n    //         startY: 50,\r\n    //         head: headers,\r\n    //         body: uData\r\n    //     };\r\n\r\n    //     doc.text(title, marginLeft, 30);\r\n    //     doc.autoTable(content);\r\n    //     doc.save(\"Timecard of\" + \" \" + pdfTitle + \".pdf\")\r\n\r\n  }\r\n  const columns = [\r\n    { field: 'serial_no', headerName: 'Serial No.', flex: 0.5, headerAlign: 'center',align:\"center\" },\r\n    // { field: 'Name', headerName: 'Name', width: 130 },\r\n    {\r\n      field: 'asset_name',\r\n      headerName: 'Asset Name',\r\n      sortable: true,\r\n      flex: 0.5,\r\n      // valueGetter: (params) =>`${params.row.firstName || ''} ${params.row.lastName || ''}`,\r\n    },\r\n    {\r\n      field: 'asset_type',\r\n      headerName: 'Asset Type',\r\n      sortable: true,\r\n      flex: 0.5\r\n    },\r\n    {\r\n      field: 'river',\r\n      headerName: 'River',\r\n      sortable: true,\r\n      flex: 0.3,\r\n    },\r\n    {\r\n      field: 'address',\r\n      headerName: 'Address',\r\n      sortable:true,\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      sortable:true,\r\n      flex: 0.3,\r\n    },\r\n    {\r\n      field: 'date_time',\r\n      headerName: 'Date & Time',\r\n      sortable:true,\r\n      flex: 0.5,\r\n    },\r\n    \r\n    // {\r\n    //   field: \"action\",\r\n    //   headerName: \"Action\",\r\n    //   headerAlign: 'center',\r\n    //   sortable: false,\r\n    //   width: 300,\r\n    //   flex: 1,\r\n    //   align:\"center\",\r\n      \r\n    //   renderCell: (params) => {\r\n    //     const show = (e) => {\r\n    //       e.stopPropagation(); // don't select this row after clicking\r\n    //       console.log('e',e)\r\n    //       console.log('params',params.row)\r\n    //       const api = params.api;\r\n    //       const thisRow = {};\r\n\r\n    //       api.getAllColumns().filter((c) => c.field !== \"__check__\" && !!c).forEach(\r\n    //         (c) => (thisRow[c.field] = params.getValue(params.id, c.field))\r\n    //       );\r\n          \r\n          \r\n    //       // return alert(JSON.stringify(thisRow, null, 4));\r\n    //     };\r\n    //     const manage_person=(e)=>{\r\n    //       e.stopPropagation(); // don't select this row after clicking\r\n          \r\n    //     }\r\n    //     return <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n    //       <ButtonGroup aria-label=\"Third group\" className=\"m-auto\" size=\"sm\">\r\n    //         <ButtonToggle size=\"sm\" onClick={show} type=\"button\">Detail</ButtonToggle>\r\n    //         <ButtonToggle type=\"button\" onClick={manage_person}>Manage Person</ButtonToggle>\r\n    //       </ButtonGroup>\r\n    //     </ButtonToolbar>\r\n    //   }\r\n    // },\r\n  ];\r\n  React.useEffect(() => {\r\n    if (location.state?.from == 'login') {\r\n      enqueueSnackbar('Welcome ', { variant: 'success' })\r\n    }\r\n    // dispatch(fetchPortableGenerators('daily'))\r\n  }, [])\r\n  const [selectedAsset, setSelectedAsset] = useState()\r\n  const [showAssetDetailModal, setShowAssetDetailModal] = useState(false)\r\n  const showDetailModal = (item) => {\r\n    console.log(item)\r\n    setSelectedAsset(item)\r\n    setShowAssetDetailModal(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get('http://dma.com.bd:8004/assets/list/?format=json').then(function (response) {\r\n        console.log(response.data)\r\n        let temp=[]\r\n        Array.from(response.data.data).forEach((item,idx)=>{\r\n          temp.push({\r\n            'id':idx+1,\r\n            'serial_no':  item.ast_serial,\r\n            'asset_name': item.ast_name,\r\n            'asset_type': item.ast_type?.ast_title || '',\r\n            \"river\":  item.ast_river.riv_name,\r\n            \"address\": item.ast_address ? item.ast_address + ', ' + item.ast_union.uni_name + ', ' + item.ast_upazila.upa_name + ', ' + capitalizeFirstLetter(item.ast_district.dis_name) + ', ' + (item.ast_division?.div_name || ''): item.ast_union.uni_name + ', ' + item.ast_upazila.upa_name + ', ' + capitalizeFirstLetter(item.ast_district.dis_name)+', ' + (item.ast_division?.div_name || '') ,\r\n            \"status\": item.ast_status.ast_status_name,\r\n            \"data\": item,\r\n            'date_time':date(item.ast_updated_at ? item.ast_updated_at : item.ast_created_at),\r\n          })\r\n        })\r\n        setassets(temp)\r\n        setFilteredAssets(temp)\r\n    }).catch(error => console.log(error));\r\n\r\n  }, []);\r\n\r\n  const listItems = data.map((item) =>\r\n    <li>{item.success}</li>\r\n  );\r\n\r\n  function date(d) {\r\n    let newDate = new Date(d);\r\n\r\n    console.log('date ' + newDate.toLocaleDateString())\r\n    console.log('time ' + newDate.toLocaleTimeString())\r\n\r\n    return (newDate.toLocaleDateString() + ' ' + newDate.toLocaleTimeString())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showAssetDetailModal && <AssetDetailsModal show={showAssetDetailModal} asset={selectedAsset} close={() => setShowAssetDetailModal(false)} />}\r\n\r\n      <div className=\"content\">\r\n      <Row style={{marginTop:\"40px\"}}>\r\n          <Col lg=\"12\" md=\"12\">\r\n            <Row>\r\n              <Col>\r\n              <Typography variant=\"h5\" component=\"div\" mb={2} sx={{color:\"rgba(255, 255, 255, 0.7)\"}}>List of Asset</Typography>\r\n              </Col>\r\n              <Col>\r\n              <SearchField\r\n                  className=\"table-search\"\r\n                  placeholder='Search by asset/river'\r\n                  onChange={onChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n              \r\n            <div style={{width: '100%',backgroundColor:\"#1A1A2E\" }} >\r\n              \r\n              <DataGrid\r\n                sx={{\r\n                  boxShadow: 20,\r\n                  border: 0,\r\n                  fontFamily: '\"Raleway\", sans-serif',\r\n                  borderColor: '#000000',\r\n                  '& .MuiDataGrid-root': {\r\n                    color: \"rgba(255, 255, 255, 0.7)\"\r\n                  },\r\n                  '& .MuiDataGrid-cell:hover': {\r\n                    color: '#f06a28',\r\n                  },\r\n                  '& .super-app-theme--header': {\r\n                    textAlign: 'center',\r\n                  },\r\n                  '& .MuiDataGrid-cell': {\r\n                    textAlign: \"center\",\r\n                    inlineSize: \"15px\"\r\n                  },\r\n                  '& .MuiDataGrid-row': {\r\n                    cursor: \"pointer\"\r\n                  },\r\n                  '& .MuiDataGrid-columnHeaderTitle': {\r\n                    fontWeight: \"700\"\r\n                  },\r\n                  '& .MuiSvgIcon-root': {\r\n                    color: \"#ffffff\"\r\n                  },\r\n                  '& .MuiButton-text':{\r\n                    color:'#dfbdba'\r\n                  },\r\n                  color: \"rgba(255, 255, 255, 255)\"\r\n                }}\r\n                autoHeight={true}\r\n                \r\n                color=\"rgba(255, 255, 255, 0.7)\"\r\n                loading={assets.length === 0}\r\n                disableSelectionOnClick={true}\r\n                rows={filtered_assets}\r\n                columns={columns}\r\n                pageSize={5}\r\n                rowsPerPageOptions={[5]}\r\n                // checkboxSelection\r\n                components={{\r\n                  Toolbar: GridToolbar,\r\n                }}\r\n                onRowClick={(rowData) => { showDetailModal(rowData.row.data) }}\r\n              // getRowClassName={(params) => `super-app-theme--${params.row.status}`}\r\n              />\r\n            </div>\r\n            \r\n\r\n          </Col>\r\n        </Row>\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Dashboard;\r\n\r\n\r\n//  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js\"></script>\r\n// <script>\r\n// function export_data(){\r\n// \tlet data=document.getElementById('data');\r\n// \tvar fp=XLSX.utils.table_to_book(data,{sheet:'vishal'});\r\n// \tXLSX.write(fp,{\r\n// \t\tbookType:'xlsx',\r\n// \t\ttype:'base64'\r\n// \t});\r\n// \tXLSX.writeFile(fp, 'test.xlsx');\r\n// }\r\n// </script> \r\n","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\views\\UserProfile.js",["238"],"import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardText,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nfunction UserProfile() {\r\n\r\n  // const [username,setUserName]=useState('')\r\n  // const [email,setEmail]=useState('')\r\n  // const [firstname,setFirstName]=useState('')\r\n  // const [lastname, setLastName]=useState('')\r\n  // const [city,setCity]=useState('')\r\n  // const [postalcode,setPostalCode]=useState('')\r\n  // const [address,setAddress]=useState('')\r\n  // const [usercountry,setCountry]=useState('')\r\n  // const [aboutme,setAboutMe]=useState('')\r\n  \r\n  const [user,setUser]= useState({username: \"\",\r\n                                  email:\"\",\r\n                                  firstName:\"\",\r\n                                  lastName:\"\",\r\n                                  country:\"\",\r\n                                  city:\"\",\r\n                                  address: \"\",\r\n                                  postalcode:\"\",\r\n                                  \r\n  })\r\n  const setUserProfile = (e) => {\r\n    setUser({...user, [e.target.name]: e.target.value});\r\n  }\r\n\r\n  function print(){\r\n\r\n  }\r\n  \r\n function onSave(){\r\n  \r\n  console.log('user',user)\r\n\r\n }\r\n const submit_form=()=>[\r\n  alert('u clicked submit')\r\n ]\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col md=\"8\">\r\n            <Card>\r\n              <CardHeader>\r\n                <h5 className=\"title\">Edit Profile</h5>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form onSubmit={submit_form}>\r\n                  <Row>\r\n                    <Col className=\"pr-md-1\" md=\"5\">\r\n                      <FormGroup>\r\n                        <label>Company (disabled)</label>\r\n                        <Input\r\n                          defaultValue=\"Creative Code Inc.\"\r\n                          disabled\r\n                          placeholder=\"Company\"\r\n                          type=\"text\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col className=\"px-md-1\" md=\"3\">\r\n                      <FormGroup>\r\n                        <label>Username</label>\r\n                        <Input\r\n                          name=\"username\"\r\n                          placeholder=\"Username\"\r\n                          type=\"text\"\r\n                          value={user.username}\r\n                          onChange={setUserProfile}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col className=\"pl-md-1\" md=\"4\">\r\n                      <FormGroup>\r\n                        <label htmlFor=\"exampleInputEmail1\">\r\n                          Email address\r\n                        </label>\r\n                        <Input \r\n                        name=\"email\"\r\n                        placeholder=\"mike@email.com\" \r\n                        type=\"email\" \r\n                        value={user.email}\r\n                        onChange={setUserProfile}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\"pr-md-1\" md=\"6\">\r\n                      <FormGroup>\r\n                        <label>First Name</label>\r\n                        <Input\r\n                          name=\"firstName\"\r\n                          placeholder=\"Company\"\r\n                          type=\"text\"\r\n                          value={user.firstName}\r\n                          onChange={setUserProfile}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col className=\"pl-md-1\" md=\"6\">\r\n                      <FormGroup>\r\n                        <label>Last Name</label>\r\n                        <Input\r\n                          name=\"lastName\"\r\n                          placeholder=\"Last Name\"\r\n                          type=\"text\"\r\n                          value={user.lastName}\r\n                          onChange={setUserProfile}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <FormGroup>\r\n                        <label>Address</label>\r\n                        <Input\r\n                          name= \"address\"\r\n                          placeholder=\"Home Address\"\r\n                          type=\"text\"\r\n                          value={user.address}\r\n                          onChange={setUserProfile}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col className=\"pr-md-1\" md=\"4\">\r\n                      <FormGroup>\r\n                        <label>City</label>\r\n                        <Input\r\n                          name= \"city\"\r\n                          placeholder=\"City\"\r\n                          type=\"text\"\r\n                          value={user.city}\r\n                          onChange={setUserProfile}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col className=\"px-md-1\" md=\"4\">\r\n                      <FormGroup>\r\n                        <label>Country</label>\r\n                        <Input\r\n                          name= \"country\"\r\n                          placeholder=\"Country\"\r\n                          type=\"text\"\r\n                          value={user.country}\r\n                          onChange={setUserProfile}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col className=\"pl-md-1\" md=\"4\">\r\n                      <FormGroup>\r\n                        <label>Postal Code</label>\r\n                        <Input \r\n                        name=\"postalcode\"\r\n                        placeholder=\"ZIP Code\"\r\n                         type=\"number\" \r\n                         value={user.postalcode}\r\n                         onChange={setUserProfile}\r\n                         />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"8\">\r\n                      <FormGroup>\r\n                        <label>About Me</label>\r\n                        <Input\r\n                          cols=\"80\"\r\n                          \r\n                          placeholder=\"Here can be your description\"\r\n                          rows=\"4\"\r\n                          type=\"textarea\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button onClick={onSave} className=\"btn-fill\" color=\"primary\" type=\"button\">\r\n                  Save\r\n                </Button>\r\n              </CardFooter>\r\n            </Card>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <Card className=\"card-user\">\r\n              <CardBody>\r\n                <CardText />\r\n                <div className=\"author\">\r\n                  <div className=\"block block-one\" />\r\n                  <div className=\"block block-two\" />\r\n                  <div className=\"block block-three\" />\r\n                  <div className=\"block block-four\" />\r\n                  <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                    <img\r\n                      alt=\"...\"\r\n                      className=\"avatar\"\r\n                      src={require(\"assets/img/emilyz.jpg\").default}\r\n                    />\r\n                    <h5 className=\"title\">Mike Andrew</h5>\r\n                  </a>\r\n                  <p className=\"description\">Ceo/Co-Founder</p>\r\n                </div>\r\n                <div className=\"card-description\">\r\n                  Do not be scared of the truth because we need to restart the\r\n                  human foundation in truth And I love you like Kanye loves\r\n                  Kanye I love Rick Owens’ bed design but the back is...\r\n                </div>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <div className=\"button-container\">\r\n                  <Button className=\"btn-icon btn-round\" color=\"facebook\">\r\n                    <i className=\"fab fa-facebook\" />\r\n                  </Button>\r\n                  <Button className=\"btn-icon btn-round\" color=\"twitter\">\r\n                    <i className=\"fab fa-twitter\" />\r\n                  </Button>\r\n                  <Button className=\"btn-icon btn-round\" color=\"google\">\r\n                    <i className=\"fab fa-google-plus\" />\r\n                  </Button>\r\n                </div>\r\n              </CardFooter>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserProfile;\r\n","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\data\\data.js",[],"C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\AssetDetailsModal\\AssetDetailsModal.js",["239","240","241","242","243","244","245"],"import { API } from 'config';\r\nimport { capitalizeFirstLetter } from 'helper';\r\nimport React, { useState, forwardRef } from 'react'\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    ModalFooter\r\n\r\n} from \"reactstrap\";\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport Typography from '@mui/material/Typography';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ReactToPrint from 'react-to-print';\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport * as FileSaver from 'file-saver';\r\n\r\n\r\nconst AssetDetailsModal = forwardRef((props, ref) => {\r\n    const [show, setShow] = useState(props.show)\r\n    const [assetDetails, setAssetDetails] = useState([])\r\n    const [expandedDevice, setExpandedDevice] = useState(null)\r\n    const [pdfTitle, setPdfTitle] = useState();\r\n    const [pdfData, setPdfData] = useState([])\r\n\r\n    const closeModal = () => {\r\n        props.close()\r\n    }\r\n    const componentRef = React.useRef(null);\r\n\r\n    React.useEffect(() => {\r\n        API.get('assets/details/' + props.asset?.id + '/').then((res) => {\r\n            console.log('asset details', res.data)\r\n            setAssetDetails(res.data.data)\r\n            setPdfData(res.data.data.device_asset)\r\n        })\r\n    }, [])\r\n\r\n    const handleDeviceAccordionChange = (panel) => (event, isExpanded) => {\r\n        setExpandedDevice(isExpanded ? panel : false);\r\n    };\r\n    \r\n    function export_pdf() {\r\n        const unit = \"pt\";\r\n        const size = \"A4\"; // Use A1, A2, A3 or A4\r\n        const orientation = \"portrait\"; // portrait or landscape\r\n\r\n        const marginLeft = 40;\r\n        const doc = new jsPDF(orientation, unit, size);\r\n\r\n        doc.setFontSize(20);\r\n\r\n        const title = \"Asset Overview\";\r\n        const asset_name=\"Name : \"+assetDetails.ast_name;\r\n        const asset_river_name = \"River : \"+assetDetails.ast_river.riv_name\r\n        const headers = [[\"#\",\r\n            \"Device\",\r\n            \"Serial No\",\r\n            \"Location\",\r\n            \"Status\",\r\n            \"Configuration Date\"]];\r\n        const uData = pdfData.map((elt, idx) => [idx + 1, elt.dev_name, elt.dev_serial_no,elt.dev_location,elt.dev_status.dev_status_name,elt.dev_created_at]);\r\n        let content = {\r\n            startY: 100,\r\n            head: headers,\r\n            body: uData\r\n        };\r\n\r\n        \r\n        doc.text(title, marginLeft, 40);\r\n        doc.line(40, 50, 500, 50);\r\n        doc.setFontSize(12);\r\n        doc.text(asset_name, marginLeft, 70);\r\n        doc.text(asset_river_name, marginLeft, 90);\r\n        \r\n        doc.autoTable(content);\r\n        doc.text('Page ' + String(doc.internal.getNumberOfPages()),210-20,297-30,null,null,\"right\");\r\n        //doc.save(\"asset_details.pdf\")\r\n        doc.autoPrint({variant: 'non-conform'});\r\n        // doc.save(\"asset_details.pdf\")\r\n        window.open(doc.output('bloburl'), '_blank');\r\n    }\r\n    return (\r\n        <>\r\n            {/**MODAl FOR SHOWING REAL TIME DATA */}\r\n            <Modal\r\n                isOpen={props.show}\r\n                size='lg'\r\n                className=\"p-2\"\r\n                backdrop={true}\r\n            >\r\n                <ModalHeader className=\"custom-modal-header\" toggle={closeModal} closeAriaLabel={\"Close\"}>\r\n                    <span style={{ color: 'white', fontSize: '22px', fontWeight: \"bold\" }}>Asset Overview</span><br /><span style={{ color: 'white', fontSize: '14px' }}>{capitalizeFirstLetter(props.asset.ast_name)}</span>\r\n                </ModalHeader>\r\n                <ModalBody className=\"custom-modal-design\" ref={componentRef}>\r\n                    <div id='overview'>\r\n                        {assetDetails.device_asset && Array.from(assetDetails.device_asset).map((item, idx) => (\r\n                        <Accordion key={idx} expanded={expandedDevice == item} onChange={handleDeviceAccordionChange(item)} sx={{ backgroundColor: 'info.main', color: 'white' }}>\r\n                            <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1bh-content\"\r\n                                id=\"panel1bh-header\"\r\n                                sx={{ backgroundColor: \"#ffffff\" }}\r\n                            >\r\n                                {/* <Typography sx={{ width: '33%', flexShrink: 0 }}>\r\n                            {item.dev_name}\r\n                        </Typography> */}\r\n                                <span style={{ color: 'grey', fontSize: '16px' }}>{item.dev_name}</span>\r\n                                {/* <Typography>{item.dev_name}</Typography> */}\r\n                            </AccordionSummary>\r\n                            <AccordionDetails sx={{ backgroundColor: \"#ffffff\", color: \"#000000\" }}>\r\n                                <ul>\r\n                                    <li>\r\n                                        <Typography sx={{ fontSize: \"14px\" }}>\r\n                                            Serial No : {item.dev_serial_no}\r\n                                        </Typography>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Typography sx={{ fontSize: \"14px\" }}>\r\n                                            Status : {item.dev_status.dev_status_name}\r\n                                        </Typography>\r\n                                    </li>\r\n                                    {item.device_sensors.length > 0 && <li>\r\n                                        <Typography sx={{ fontSize: \"14px\" }}>\r\n                                            Sensors :\r\n                                        </Typography>\r\n                                        <ul>\r\n                                            {item.device_sensors.map((item, idx) => (\r\n                                                <li key={idx}>\r\n                                                    <Typography sx={{ fontSize: \"12px\" }}>\r\n                                                        {idx + 1}. {item.sen_name}\r\n                                                    </Typography>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n                                    </li>}\r\n                                </ul>\r\n\r\n                                {/* <Typography>\r\n                                Sensors :\r\n                                \r\n                            </Typography> */}\r\n                            </AccordionDetails>\r\n                        </Accordion>))}\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <div className=\"modal-button-holder\">\r\n                        {/* <Button className=\"mr-1\" outline size=\"sm\"\r\n                            onClick={handlePrint}\r\n                        >\r\n                            Print\r\n                        </Button> */}\r\n                        <ReactToPrint\r\n                            trigger={() => <Button className=\"mr-1\" outline size=\"sm\">Print this out!</Button>}\r\n                            content={export_pdf}\r\n                        />\r\n                        <Button size=\"sm\" outline type=\"button\" onClick={() => { props.close() }} className=\"okay-button-modal btn-warning\">\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </ModalFooter>\r\n            </Modal>\r\n            {/**modal ends */}\r\n        </>\r\n    )\r\n})\r\n\r\nexport default AssetDetailsModal","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\variables\\charts.js",["246"],"/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n// ##############################\r\n// // // Chart variables\r\n// #############################\r\n\r\n// chartExample1 and chartExample2 options\r\nlet chart1_2_options = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  tooltips: {\r\n    backgroundColor: \"#f5f5f5\",\r\n    titleFontColor: \"#333\",\r\n    bodyFontColor: \"#666\",\r\n    bodySpacing: 4,\r\n    xPadding: 12,\r\n    mode: \"nearest\",\r\n    intersect: 0,\r\n    position: \"nearest\",\r\n  },\r\n  responsive: true,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        \r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.0)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: 'pH & Temp. (C)'\r\n        },\r\n        ticks: {\r\n          suggestedMin: 60,\r\n          suggestedMax: 125,\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n     \r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        barPercentage: 1.6,\r\n        gridLines: {\r\n          drawBorder: false,\r\n          color: \"rgba(29,140,248,0.1)\",\r\n          zeroLineColor: \"transparent\",\r\n        },\r\n        scaleLabel: {\r\n          display: true,\r\n          labelString: 'Time'\r\n        },\r\n        ticks: {\r\n          padding: 20,\r\n          fontColor: \"#9a9a9a\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet phData = {\r\n  data1: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: \"My First dataset\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [0, 5, 10, 15, 20, 25, 30, 35, 40],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n\r\nlet chartExample1 = {\r\n  data1: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"01\",\r\n        \"3\",\r\n        \"5\",\r\n        \"7\",\r\n        \"9\",\r\n        \"11\",\r\n        \"13\",\r\n        \"15\",\r\n        \"17\",\r\n        \"19\",\r\n        \"21\",\r\n        \"23\",\r\n        '25',\r\n        '27',\r\n        '29',\r\n        '31'\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"My First dataset\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [0, 5, 10, 15, 20, 25, 30, 35, 40],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data2: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"JAN\",\r\n        \"FEB\",\r\n        \"MAR\",\r\n        \"APR\",\r\n        \"MAY\",\r\n        \"JUN\",\r\n        \"JUL\",\r\n        \"AUG\",\r\n        \"SEP\",\r\n        \"OCT\",\r\n        \"NOV\",\r\n        \"DEC\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"My First dataset\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  data3: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\r\n        \"JAN\",\r\n        \"FEB\",\r\n        \"MAR\",\r\n        \"APR\",\r\n        \"MAY\",\r\n        \"JUN\",\r\n        \"JUL\",\r\n        \"AUG\",\r\n        \"SEP\",\r\n        \"OCT\",\r\n        \"NOV\",\r\n        \"DEC\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"pH & Temp. (Celcius)\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet chartExample2 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\r\n\r\n    return {\r\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\r\n      datasets: [\r\n        {\r\n          label: \"Data\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#1f8ef1\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#1f8ef1\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#1f8ef1\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [80, 100, 70, 80, 120, 80],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: chart1_2_options,\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nlet chartExample3 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\r\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\r\n\r\n    return {\r\n      labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\r\n      datasets: [\r\n        {\r\n          label: \"Countries\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          hoverBackgroundColor: gradientStroke,\r\n          borderColor: \"#d048b6\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          data: [53, 20, 10, 80, 100, 45],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltips: {\r\n      backgroundColor: \"#f5f5f5\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(225,78,202,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            suggestedMin: 60,\r\n            suggestedMax: 120,\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(225,78,202,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\n// #########################################\r\n// // // used inside src/views/Dashboard.js\r\n// #########################################\r\nconst chartExample4 = {\r\n  data: (canvas) => {\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\r\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\r\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\r\n\r\n    return {\r\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\r\n      datasets: [\r\n        {\r\n          label: \"My First dataset\",\r\n          fill: true,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: \"#00d6b4\",\r\n          borderWidth: 2,\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          pointBackgroundColor: \"#00d6b4\",\r\n          pointBorderColor: \"rgba(255,255,255,0)\",\r\n          pointHoverBackgroundColor: \"#00d6b4\",\r\n          pointBorderWidth: 20,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 15,\r\n          pointRadius: 4,\r\n          data: [90, 27, 60, 12, 80],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      backgroundColor: \"#f5f5f5\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          barPercentage: 1.6,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(29,140,248,0.0)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'pH & Temp. (0C)'\r\n          },\r\n          ticks: {\r\n            suggestedMin: 50,\r\n            suggestedMax: 125,\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n        },\r\n      ],\r\n\r\n      xAxes: [\r\n        {\r\n          barPercentage: 1.6,\r\n          gridLines: {\r\n            drawBorder: false,\r\n            color: \"rgba(0,242,195,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n          ticks: {\r\n            padding: 20,\r\n            fontColor: \"#9e9e9e\",\r\n          },\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'Time'\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\nmodule.exports = {\r\n  chartExample1, // in src/views/Dashboard.js\r\n  chartExample2, // in src/views/Dashboard.js\r\n  chartExample3, // in src/views/Dashboard.js\r\n  chartExample4, // in src/views/Dashboard.js\r\n};\r\n","C:\\Users\\Shaif\\workshop\\dma\\asset-management-web-app\\app\\view\\src\\components\\MailTo\\MailTo.js",[],{"ruleId":"247","severity":1,"message":"248","line":3,"column":10,"nodeType":"249","messageId":"250","endLine":3,"endColumn":23},{"ruleId":"247","severity":1,"message":"251","line":6,"column":8,"nodeType":"249","messageId":"250","endLine":6,"endColumn":17},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"247","severity":1,"message":"256","line":3,"column":25,"nodeType":"249","messageId":"250","endLine":3,"endColumn":33},{"ruleId":"247","severity":1,"message":"257","line":11,"column":8,"nodeType":"249","messageId":"250","endLine":11,"endColumn":19},{"ruleId":"247","severity":1,"message":"258","line":19,"column":23,"nodeType":"249","messageId":"250","endLine":19,"endColumn":34},{"ruleId":"247","severity":1,"message":"259","line":21,"column":10,"nodeType":"249","messageId":"250","endLine":21,"endColumn":17},{"ruleId":"247","severity":1,"message":"260","line":22,"column":10,"nodeType":"249","messageId":"250","endLine":22,"endColumn":31},{"ruleId":"247","severity":1,"message":"261","line":23,"column":10,"nodeType":"249","messageId":"250","endLine":23,"endColumn":24},{"ruleId":"262","severity":1,"message":"263","line":71,"column":23,"nodeType":"264","messageId":"265","endLine":71,"endColumn":25},{"ruleId":"266","severity":1,"message":"267","line":80,"column":5,"nodeType":"268","endLine":80,"endColumn":7,"suggestions":"269"},{"ruleId":"247","severity":1,"message":"256","line":4,"column":16,"nodeType":"249","messageId":"250","endLine":4,"endColumn":24},{"ruleId":"247","severity":1,"message":"270","line":11,"column":5,"nodeType":"249","messageId":"250","endLine":11,"endColumn":10},{"ruleId":"247","severity":1,"message":"271","line":13,"column":5,"nodeType":"249","messageId":"250","endLine":13,"endColumn":8},{"ruleId":"247","severity":1,"message":"260","line":22,"column":10,"nodeType":"249","messageId":"250","endLine":22,"endColumn":31},{"ruleId":"247","severity":1,"message":"272","line":34,"column":30,"nodeType":"249","messageId":"250","endLine":34,"endColumn":43},{"ruleId":"273","severity":1,"message":"274","line":106,"column":41,"nodeType":"275","endLine":110,"endColumn":43},{"ruleId":"247","severity":1,"message":"276","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":23},{"ruleId":"247","severity":1,"message":"259","line":3,"column":22,"nodeType":"249","messageId":"250","endLine":3,"endColumn":29},{"ruleId":"247","severity":1,"message":"277","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":13},{"ruleId":"247","severity":1,"message":"278","line":9,"column":8,"nodeType":"249","messageId":"250","endLine":9,"endColumn":19},{"ruleId":"279","severity":1,"message":"280","line":28,"column":11,"nodeType":"275","messageId":"281","endLine":31,"endColumn":12,"fix":"282"},{"ruleId":"247","severity":1,"message":"283","line":9,"column":3,"nodeType":"249","messageId":"250","endLine":9,"endColumn":9},{"ruleId":"247","severity":1,"message":"284","line":16,"column":3,"nodeType":"249","messageId":"250","endLine":16,"endColumn":13},{"ruleId":"247","severity":1,"message":"285","line":17,"column":3,"nodeType":"249","messageId":"250","endLine":17,"endColumn":14},{"ruleId":"247","severity":1,"message":"286","line":10,"column":26,"nodeType":"249","messageId":"250","endLine":10,"endColumn":43},{"ruleId":"247","severity":1,"message":"287","line":12,"column":3,"nodeType":"249","messageId":"250","endLine":12,"endColumn":25},{"ruleId":"247","severity":1,"message":"288","line":13,"column":3,"nodeType":"249","messageId":"250","endLine":13,"endColumn":19},{"ruleId":"247","severity":1,"message":"289","line":39,"column":9,"nodeType":"249","messageId":"250","endLine":39,"endColumn":20},{"ruleId":"247","severity":1,"message":"290","line":42,"column":19,"nodeType":"249","messageId":"250","endLine":42,"endColumn":28},{"ruleId":"279","severity":1,"message":"280","line":48,"column":9,"nodeType":"275","messageId":"281","endLine":53,"endColumn":10,"fix":"291"},{"ruleId":"279","severity":1,"message":"280","line":60,"column":9,"nodeType":"275","messageId":"281","endLine":65,"endColumn":10,"fix":"292"},{"ruleId":"247","severity":1,"message":"283","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":16},{"ruleId":"262","severity":1,"message":"293","line":2,"column":98,"nodeType":"264","messageId":"265","endLine":2,"endColumn":100},{"ruleId":"247","severity":1,"message":"294","line":1,"column":28,"nodeType":"249","messageId":"250","endLine":1,"endColumn":34},{"ruleId":"247","severity":1,"message":"295","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":15},{"ruleId":"247","severity":1,"message":"296","line":4,"column":8,"nodeType":"249","messageId":"250","endLine":4,"endColumn":18},{"ruleId":"247","severity":1,"message":"297","line":6,"column":10,"nodeType":"249","messageId":"250","endLine":6,"endColumn":14},{"ruleId":"247","severity":1,"message":"298","line":6,"column":16,"nodeType":"249","messageId":"250","endLine":6,"endColumn":19},{"ruleId":"247","severity":1,"message":"299","line":8,"column":8,"nodeType":"249","messageId":"250","endLine":8,"endColumn":19},{"ruleId":"247","severity":1,"message":"300","line":9,"column":8,"nodeType":"249","messageId":"250","endLine":9,"endColumn":17},{"ruleId":"247","severity":1,"message":"301","line":10,"column":8,"nodeType":"249","messageId":"250","endLine":10,"endColumn":19},{"ruleId":"247","severity":1,"message":"302","line":14,"column":3,"nodeType":"249","messageId":"250","endLine":14,"endColumn":14},{"ruleId":"247","severity":1,"message":"303","line":18,"column":3,"nodeType":"249","messageId":"250","endLine":18,"endColumn":6},{"ruleId":"247","severity":1,"message":"304","line":19,"column":3,"nodeType":"249","messageId":"250","endLine":19,"endColumn":10},{"ruleId":"247","severity":1,"message":"305","line":20,"column":3,"nodeType":"249","messageId":"250","endLine":20,"endColumn":16},{"ruleId":"247","severity":1,"message":"306","line":22,"column":3,"nodeType":"249","messageId":"250","endLine":22,"endColumn":15},{"ruleId":"247","severity":1,"message":"307","line":24,"column":3,"nodeType":"249","messageId":"250","endLine":24,"endColumn":13},{"ruleId":"247","severity":1,"message":"308","line":25,"column":3,"nodeType":"249","messageId":"250","endLine":25,"endColumn":10},{"ruleId":"247","severity":1,"message":"309","line":30,"column":3,"nodeType":"249","messageId":"250","endLine":30,"endColumn":14},{"ruleId":"247","severity":1,"message":"310","line":33,"column":3,"nodeType":"249","messageId":"250","endLine":33,"endColumn":8},{"ruleId":"247","severity":1,"message":"311","line":34,"column":3,"nodeType":"249","messageId":"250","endLine":34,"endColumn":8},{"ruleId":"247","severity":1,"message":"312","line":40,"column":3,"nodeType":"249","messageId":"250","endLine":40,"endColumn":16},{"ruleId":"247","severity":1,"message":"313","line":41,"column":3,"nodeType":"249","messageId":"250","endLine":41,"endColumn":16},{"ruleId":"247","severity":1,"message":"314","line":43,"column":3,"nodeType":"249","messageId":"250","endLine":43,"endColumn":16},{"ruleId":"247","severity":1,"message":"315","line":48,"column":8,"nodeType":"249","messageId":"250","endLine":48,"endColumn":19},{"ruleId":"247","severity":1,"message":"316","line":52,"column":10,"nodeType":"249","messageId":"250","endLine":52,"endColumn":29},{"ruleId":"247","severity":1,"message":"317","line":55,"column":8,"nodeType":"249","messageId":"250","endLine":55,"endColumn":13},{"ruleId":"247","severity":1,"message":"272","line":63,"column":28,"nodeType":"249","messageId":"250","endLine":63,"endColumn":41},{"ruleId":"247","severity":1,"message":"318","line":64,"column":7,"nodeType":"249","messageId":"250","endLine":64,"endColumn":15},{"ruleId":"319","severity":1,"message":"320","line":74,"column":3,"nodeType":"321","messageId":"322","endLine":74,"endColumn":41},{"ruleId":"247","severity":1,"message":"323","line":84,"column":10,"nodeType":"249","messageId":"250","endLine":84,"endColumn":17},{"ruleId":"247","severity":1,"message":"324","line":84,"column":18,"nodeType":"249","messageId":"250","endLine":84,"endColumn":28},{"ruleId":"247","severity":1,"message":"325","line":121,"column":9,"nodeType":"249","messageId":"250","endLine":121,"endColumn":38},{"ruleId":"247","severity":1,"message":"299","line":6,"column":8,"nodeType":"249","messageId":"250","endLine":6,"endColumn":19},{"ruleId":"247","severity":1,"message":"326","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":18},{"ruleId":"247","severity":1,"message":"327","line":16,"column":3,"nodeType":"249","messageId":"250","endLine":16,"endColumn":7},{"ruleId":"247","severity":1,"message":"328","line":17,"column":3,"nodeType":"249","messageId":"250","endLine":17,"endColumn":13},{"ruleId":"247","severity":1,"message":"329","line":18,"column":3,"nodeType":"249","messageId":"250","endLine":18,"endColumn":11},{"ruleId":"247","severity":1,"message":"270","line":19,"column":3,"nodeType":"249","messageId":"250","endLine":19,"endColumn":8},{"ruleId":"247","severity":1,"message":"330","line":22,"column":3,"nodeType":"249","messageId":"250","endLine":22,"endColumn":11},{"ruleId":"247","severity":1,"message":"331","line":22,"column":13,"nodeType":"249","messageId":"250","endLine":22,"endColumn":25},{"ruleId":"247","severity":1,"message":"332","line":22,"column":27,"nodeType":"249","messageId":"250","endLine":22,"endColumn":41},{"ruleId":"247","severity":1,"message":"333","line":22,"column":43,"nodeType":"249","messageId":"250","endLine":22,"endColumn":55},{"ruleId":"247","severity":1,"message":"302","line":22,"column":56,"nodeType":"249","messageId":"250","endLine":22,"endColumn":67},{"ruleId":"247","severity":1,"message":"306","line":22,"column":68,"nodeType":"249","messageId":"250","endLine":22,"endColumn":80},{"ruleId":"247","severity":1,"message":"305","line":22,"column":81,"nodeType":"249","messageId":"250","endLine":22,"endColumn":94},{"ruleId":"247","severity":1,"message":"258","line":29,"column":23,"nodeType":"249","messageId":"250","endLine":29,"endColumn":34},{"ruleId":"247","severity":1,"message":"334","line":33,"column":10,"nodeType":"249","messageId":"250","endLine":33,"endColumn":13},{"ruleId":"247","severity":1,"message":"317","line":36,"column":8,"nodeType":"249","messageId":"250","endLine":36,"endColumn":13},{"ruleId":"247","severity":1,"message":"335","line":46,"column":10,"nodeType":"249","messageId":"250","endLine":46,"endColumn":20},{"ruleId":"247","severity":1,"message":"336","line":47,"column":9,"nodeType":"249","messageId":"250","endLine":47,"endColumn":22},{"ruleId":"247","severity":1,"message":"272","line":49,"column":28,"nodeType":"249","messageId":"250","endLine":49,"endColumn":41},{"ruleId":"247","severity":1,"message":"337","line":50,"column":9,"nodeType":"249","messageId":"250","endLine":50,"endColumn":17},{"ruleId":"247","severity":1,"message":"338","line":55,"column":12,"nodeType":"249","messageId":"250","endLine":55,"endColumn":19},{"ruleId":"319","severity":1,"message":"320","line":61,"column":3,"nodeType":"321","messageId":"322","endLine":61,"endColumn":41},{"ruleId":"247","severity":1,"message":"339","line":62,"column":12,"nodeType":"249","messageId":"250","endLine":62,"endColumn":40},{"ruleId":"247","severity":1,"message":"340","line":84,"column":9,"nodeType":"249","messageId":"250","endLine":84,"endColumn":23},{"ruleId":"247","severity":1,"message":"341","line":87,"column":9,"nodeType":"249","messageId":"250","endLine":87,"endColumn":18},{"ruleId":"247","severity":1,"message":"342","line":91,"column":9,"nodeType":"249","messageId":"250","endLine":91,"endColumn":15},{"ruleId":"247","severity":1,"message":"343","line":95,"column":9,"nodeType":"249","messageId":"250","endLine":95,"endColumn":23},{"ruleId":"247","severity":1,"message":"344","line":99,"column":10,"nodeType":"249","messageId":"250","endLine":99,"endColumn":25},{"ruleId":"247","severity":1,"message":"345","line":99,"column":27,"nodeType":"249","messageId":"250","endLine":99,"endColumn":44},{"ruleId":"247","severity":1,"message":"346","line":102,"column":10,"nodeType":"249","messageId":"250","endLine":102,"endColumn":18},{"ruleId":"247","severity":1,"message":"347","line":102,"column":20,"nodeType":"249","messageId":"250","endLine":102,"endColumn":31},{"ruleId":"247","severity":1,"message":"348","line":103,"column":10,"nodeType":"249","messageId":"250","endLine":103,"endColumn":17},{"ruleId":"247","severity":1,"message":"349","line":103,"column":19,"nodeType":"249","messageId":"250","endLine":103,"endColumn":29},{"ruleId":"247","severity":1,"message":"350","line":105,"column":16,"nodeType":"249","messageId":"250","endLine":105,"endColumn":23},{"ruleId":"247","severity":1,"message":"351","line":110,"column":9,"nodeType":"249","messageId":"250","endLine":110,"endColumn":20},{"ruleId":"247","severity":1,"message":"352","line":130,"column":12,"nodeType":"249","messageId":"250","endLine":130,"endColumn":22},{"ruleId":"262","severity":1,"message":"263","line":238,"column":30,"nodeType":"264","messageId":"265","endLine":238,"endColumn":32},{"ruleId":"266","severity":1,"message":"353","line":242,"column":6,"nodeType":"268","endLine":242,"endColumn":8,"suggestions":"354"},{"ruleId":"247","severity":1,"message":"355","line":274,"column":9,"nodeType":"249","messageId":"250","endLine":274,"endColumn":18},{"ruleId":"247","severity":1,"message":"356","line":45,"column":12,"nodeType":"249","messageId":"250","endLine":45,"endColumn":17},{"ruleId":"247","severity":1,"message":"357","line":20,"column":13,"nodeType":"249","messageId":"250","endLine":20,"endColumn":22},{"ruleId":"247","severity":1,"message":"358","line":24,"column":12,"nodeType":"249","messageId":"250","endLine":24,"endColumn":16},{"ruleId":"247","severity":1,"message":"359","line":24,"column":18,"nodeType":"249","messageId":"250","endLine":24,"endColumn":25},{"ruleId":"247","severity":1,"message":"346","line":27,"column":12,"nodeType":"249","messageId":"250","endLine":27,"endColumn":20},{"ruleId":"247","severity":1,"message":"347","line":27,"column":22,"nodeType":"249","messageId":"250","endLine":27,"endColumn":33},{"ruleId":"266","severity":1,"message":"360","line":41,"column":8,"nodeType":"268","endLine":41,"endColumn":10,"suggestions":"361"},{"ruleId":"262","severity":1,"message":"263","line":102,"column":71,"nodeType":"264","messageId":"265","endLine":102,"endColumn":73},{"ruleId":"247","severity":1,"message":"362","line":86,"column":5,"nodeType":"249","messageId":"250","endLine":86,"endColumn":11},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'RTLLayout' is defined but never used.","no-native-reassign",["363"],"no-negated-in-lhs",["364"],"'Redirect' is defined but never used.","'FixedPlugin' is defined but never used.","'useSelector' is defined but never used.","'USER_ID' is defined but never used.","'fetchUserDetailsThunk' is defined but never used.","'fetchUsersData' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["365"],"'Table' is defined but never used.","'Col' is defined but never used.","'closeSnackbar' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'pg_generators' is defined but never used.","'Users' is defined but never used.","'UserProfile' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"366","text":"367"},"'Button' is defined but never used.","'InputGroup' is defined but never used.","'NavbarBrand' is defined but never used.","'ReactstrapNavLink' is defined but never used.","'BackgroundColorContext' is defined but never used.","'backgroundColors' is defined but never used.","'linkOnClick' is assigned a value but never used.","'rtlActive' is assigned a value but never used.",{"range":"368","text":"367"},{"range":"369","text":"367"},"Expected '!==' and instead saw '!='.","'useRef' is defined but never used.","'UpArrow' is defined but never used.","'classNames' is defined but never used.","'Line' is defined but never used.","'Bar' is defined but never used.","'SafePondDot' is defined but never used.","'PaperIcon' is defined but never used.","'RefreshIcon' is defined but never used.","'ButtonGroup' is defined but never used.","'Nav' is defined but never used.","'NavLink' is defined but never used.","'ButtonToolbar' is defined but never used.","'ButtonToggle' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'ModalFooter' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'chartExample1' is defined but never used.","'chartExample2' is defined but never used.","'chartExample4' is defined but never used.","'OwlCarousel' is defined but never used.","'generate_graph_data' is defined but never used.","'store' is defined but never used.","'location' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'swap_user_verification_status' is assigned a value but never used.","'OfflineDot' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'Dropdown' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'API' is defined but never used.","'searchText' is assigned a value but never used.","'executeScroll' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'onEnter' is defined but never used.","'filterBy_AssetName_RiverName' is defined but never used.","'toggleTaskForm' is assigned a value but never used.","'closeForm' is assigned a value but never used.","'toggle' is assigned a value but never used.","'toggleDropDown' is assigned a value but never used.","'selected_option' is assigned a value but never used.","'setSelectedOption' is assigned a value but never used.","'pdfTitle' is assigned a value but never used.","'setPdfTitle' is assigned a value but never used.","'pdfData' is assigned a value but never used.","'setPdfData' is assigned a value but never used.","'setData' is assigned a value but never used.","'exportToCSV' is assigned a value but never used.","'export_pdf' is defined but never used.","React Hook React.useEffect has missing dependencies: 'enqueueSnackbar' and 'location.state?.from'. Either include them or remove the dependency array.",["370"],"'listItems' is assigned a value but never used.","'print' is defined but never used.","'FileSaver' is defined but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props.asset?.id'. Either include it or remove the dependency array.",["371"],"'phData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"372","fix":"373"},[925,925]," rel=\"noreferrer\"",[1607,1607],[1934,1934],{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},"Update the dependencies array to be: [dispatch, history]",{"range":"378","text":"379"},"Update the dependencies array to be: [enqueueSnackbar, location.state?.from]",{"range":"380","text":"381"},"Update the dependencies array to be: [props.asset?.id]",{"range":"382","text":"383"},[2998,3000],"[dispatch, history]",[8330,8332],"[enqueueSnackbar, location.state?.from]",[1389,1391],"[props.asset?.id]"]